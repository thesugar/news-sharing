{"version":3,"file":"static/webpack/static/development/pages/p/[id].js.374c75500e264af8725f.hot-update.js","sources":["webpack:///./components/ShareNews.js"],"sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport { useRadioGroup } from '@material-ui/core';\n\nclass ShareNews extends Component {\n\n    constructor(props){\n        super(props);\n        if (this.props.login == false) {\n            Router.push('/address');\n        }\n        this.state = {\n            title: '',\n            description: '',\n            url: '',\n            image: '',\n        }\n        this.logined = this.logined.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeDetail = this.onChangeDetail.bind(this);\n        this.onChangeDeadline = this.onChangeDeadline.bind(this);\n        this.onChangeConcerns = this.onChangeConcerns.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        console.log('logined.');\n    }\n\n    logouted(){\n        Router.push('/');\n    }\n\n    // フィールド入力処理\n    onChangeTitle(e) {\n        this.setState({title: e.target.value});\n    }\n\n    onChangeDetail(e){\n        this.setState({detail: e.target.value});\n    }\n\n    onChangeDeadline(e){\n        this.setState({deadline: e.target.value});\n    }\n\n    onChangeConcerns(e){\n        this.setState({concerns: e.target.value});\n    }\n\n    // データの登録処理\n    doAction = (article, e) => {    \n\n        let db = firebase.firestore();\n        // Firestore の登録処理\n\n        db.collection('share').add({\n            title: article.title,\n            description: article.description,\n            image: article.urlToImage,\n            url: article.url,\n            sharedFrom: userid,\n            //sharedTo : \n        })\n        .then((doc) => {\n            console.log(`共有しました`);\n        })\n        .catch((error) => {\n            console.log(`共有に失敗しました。リトライしてください。`);\n        });\n\n        this.setState({\n            title: '',\n            description: '',\n            image: '',\n            url: '',\n        })\n    }\n\n    render(){\n        const article = this.props.article;\n        const userid = this.props.userid;\n        return (\n            <div>\n                <button onClick={(e) => this.doAction(article, userid, e)}>共有する</button>\n            </div>\n            // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n        );\n    }\n}\n\nShareNews = connect((state) => state) (ShareNews);\nexport default ShareNews;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAgDA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAvEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAiBA;AACA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;AA8BA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;;;;AArFA;AACA;AAuFA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}