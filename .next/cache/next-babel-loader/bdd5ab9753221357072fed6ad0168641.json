{"ast":null,"code":"var _jsxFileName = \"/Users/thesugar/news-sharing/components/ShareNews.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport { useRadioGroup } from '@material-ui/core';\n\nclass ShareNews extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"doAction\", (article, e) => {\n      let db = firebase.firestore(); // Firestore の登録処理\n\n      db.collection('share').add({\n        title: article.title,\n        description: article.description,\n        image: article.urlToImage,\n        url: article.url,\n        sharedFrom: userid //sharedTo : \n\n      }).then(doc => {\n        console.log(`共有しました`);\n      }).catch(error => {\n        console.log(`共有に失敗しました。リトライしてください。`);\n      });\n      this.setState({\n        title: '',\n        description: '',\n        image: '',\n        url: ''\n      });\n    });\n\n    if (this.props.login == false) {\n      Router.push('/address');\n    }\n\n    this.state = {\n      title: '',\n      description: '',\n      url: '',\n      image: ''\n    };\n    this.logined = this.logined.bind(this);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDetail = this.onChangeDetail.bind(this);\n    this.onChangeDeadline = this.onChangeDeadline.bind(this);\n    this.onChangeConcerns = this.onChangeConcerns.bind(this);\n    this.doAction = this.doAction.bind(this);\n  } // login, logout 処理\n\n\n  logined() {\n    console.log('logined.');\n  }\n\n  logouted() {\n    Router.push('/');\n  } // フィールド入力処理\n\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeDetail(e) {\n    this.setState({\n      detail: e.target.value\n    });\n  }\n\n  onChangeDeadline(e) {\n    this.setState({\n      deadline: e.target.value\n    });\n  }\n\n  onChangeConcerns(e) {\n    this.setState({\n      concerns: e.target.value\n    });\n  } // データの登録処理\n\n\n  render() {\n    const article = this.props.article;\n    const userid = this.props.userid;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: e => this.doAction(article, userid, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"\\u5171\\u6709\\u3059\\u308B\")) // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n    ;\n  }\n\n}\n\nShareNews = connect(state => state)(ShareNews);\nexport default ShareNews;","map":{"version":3,"sources":["/Users/thesugar/news-sharing/components/ShareNews.js"],"names":["React","Component","connect","Router","firebase","useRadioGroup","ShareNews","constructor","props","article","e","db","firestore","collection","add","title","description","image","urlToImage","url","sharedFrom","userid","then","doc","console","log","catch","error","setState","login","push","state","logined","bind","onChangeTitle","onChangeDetail","onChangeDeadline","onChangeConcerns","doAction","logouted","target","value","detail","deadline","concerns","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport { useRadioGroup } from '@material-ui/core';\n\nclass ShareNews extends Component {\n\n    constructor(props){\n        super(props);\n        if (this.props.login == false) {\n            Router.push('/address');\n        }\n        this.state = {\n            title: '',\n            description: '',\n            url: '',\n            image: '',\n        }\n        this.logined = this.logined.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeDetail = this.onChangeDetail.bind(this);\n        this.onChangeDeadline = this.onChangeDeadline.bind(this);\n        this.onChangeConcerns = this.onChangeConcerns.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        console.log('logined.');\n    }\n\n    logouted(){\n        Router.push('/');\n    }\n\n    // フィールド入力処理\n    onChangeTitle(e) {\n        this.setState({title: e.target.value});\n    }\n\n    onChangeDetail(e){\n        this.setState({detail: e.target.value});\n    }\n\n    onChangeDeadline(e){\n        this.setState({deadline: e.target.value});\n    }\n\n    onChangeConcerns(e){\n        this.setState({concerns: e.target.value});\n    }\n\n    // データの登録処理\n    doAction = (article, e) => {    \n\n        let db = firebase.firestore();\n        // Firestore の登録処理\n\n        db.collection('share').add({\n            title: article.title,\n            description: article.description,\n            image: article.urlToImage,\n            url: article.url,\n            sharedFrom: userid,\n            //sharedTo : \n        })\n        .then((doc) => {\n            console.log(`共有しました`);\n        })\n        .catch((error) => {\n            console.log(`共有に失敗しました。リトライしてください。`);\n        });\n\n        this.setState({\n            title: '',\n            description: '',\n            image: '',\n            url: '',\n        })\n    }\n\n    render(){\n        const article = this.props.article;\n        const userid = this.props.userid;\n        return (\n            <div>\n                <button onClick={(e) => this.doAction(article, userid, e)}>共有する</button>\n            </div>\n            // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n        );\n    }\n}\n\nShareNews = connect((state) => state) (ShareNews);\nexport default ShareNews;"]},"metadata":{},"sourceType":"module"}