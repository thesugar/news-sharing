{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/RyoheiSato/news-sharing/components/NewsList.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport NewsCard from '../components/NewsCard';\nimport Account from '../components/Account';\nimport firebase from \"firebase\";\n\nvar NewsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewsList, _Component);\n\n  function NewsList(props) {\n    var _this;\n\n    _classCallCheck(this, NewsList);\n\n    console.log('NewsListのconstructor');\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewsList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getNews\", function _callee() {\n      var url, self, result, json;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // fill your API key!\n              url = \"https://newsapi.org/v2/top-headlines?country=jp&apiKey=30d451b495234aae8b35d83d68082817\";\n              self = _assertThisInitialized(_this);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url));\n\n            case 4:\n              result = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(result.json());\n\n            case 7:\n              json = _context.sent;\n\n              _this.props.dispatch({\n                type: 'UPDATE_USER',\n                value: {\n                  articles: json.articles\n                }\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _this.logined = _this.logined.bind(_assertThisInitialized(_this));\n    return _this;\n  } // get data from Firebase\n\n\n  _createClass(NewsList, [{\n    key: \"logined\",\n    value: function logined() {\n      console.log('loginしました'); //this.getFireData();\n    }\n  }, {\n    key: \"logouted\",\n    value: function logouted() {\n      console.log('logoutしました');\n    }\n    /*\n            <li key={index.toString}>\n                <Link href=\"/p/[id]\" as={`/p/${index}`}>\n                {article['title']}\n                </Link>\n            <ul>\n                <li key=\"0\"><img src={article['urlToImage']} width=\"100\" height=\"100\" /></li>\n                <li key=\"1\">{article['description']}</li>\n                <li key=\"2\">{article['content']}</li>\n            </ul>\n            </li>);\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('NewsListのrender()');\n      console.log('今のthis.propsは');\n      console.log(this.props);\n      this.props.articles.length === 0 && this.getNews();\n      var itemList = [];\n      this.props.articles.map(function (article, index) {\n        itemList.push(__jsx(NewsCard, {\n          title: article['title'],\n          image: article['urlToImage'],\n          description: article['description'],\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }));\n      });\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __jsx(Account, {\n        onLogined: this.logined,\n        onLogouted: this.logouted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, itemList));\n    }\n  }]);\n\n  return NewsList;\n}(Component);\n\nNewsList = connect(function (state) {\n  return state;\n})(NewsList);\nexport default NewsList;","map":{"version":3,"sources":["/Users/RyoheiSato/news-sharing/components/NewsList.js"],"names":["React","Component","ReactDOM","connect","Link","NewsCard","Account","firebase","NewsList","props","console","log","url","self","fetch","result","json","dispatch","type","value","articles","logined","bind","length","getNews","itemList","map","article","index","push","logouted","state"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;IAEMC,Q;;;;;AAEF,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,kFAAMF,KAAN;;AAFc,8DAOR;AAAA;AAAA;AAAA;AAAA;AAAA;AACN;AACMG,cAAAA,GAFA,GAEM,yFAFN;AAGFC,cAAAA,IAHE;AAAA;AAAA,+CAKeC,KAAK,CAACF,GAAD,CALpB;;AAAA;AAKAG,cAAAA,MALA;AAAA;AAAA,+CAMaA,MAAM,CAACC,IAAP,EANb;;AAAA;AAMAA,cAAAA,IANA;;AAQN,oBAAKP,KAAL,CAAWQ,QAAX,CAAoB;AAChBC,gBAAAA,IAAI,EAAG,aADS;AAEhBC,gBAAAA,KAAK,EAAG;AACJC,kBAAAA,QAAQ,EAAEJ,IAAI,CAACI;AADX;AAFQ,eAApB;;AARM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPQ;;AAGd,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf;AAHc;AAIjB,G,CAED;;;;;8BAiBS;AACLZ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EADK,CAEL;AACH;;;+BAES;AACND,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;AAED;;;;;;;;;;;;;;;6BAaS;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACA,WAAKA,KAAL,CAAWW,QAAX,CAAoBG,MAApB,KAA+B,CAA/B,IAAoC,KAAKC,OAAL,EAApC;AACA,UAAMC,QAAQ,GAAG,EAAjB;AACA,WAAKhB,KAAL,CAAWW,QAAX,CAAoBM,GAApB,CAAwB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACxCH,QAAAA,QAAQ,CAACI,IAAT,CACI,MAAC,QAAD;AAAU,UAAA,KAAK,EAAEF,OAAO,CAAC,OAAD,CAAxB;AAAmC,UAAA,KAAK,EAAEA,OAAO,CAAC,YAAD,CAAjD;AAAiE,UAAA,WAAW,EAAEA,OAAO,CAAC,aAAD,CAArF;AAAsG,UAAA,KAAK,EAAEC,KAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJD;AAMA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,OAAD;AAAS,QAAA,SAAS,EAAE,KAAKP,OAAzB;AAAkC,QAAA,UAAU,EAAE,KAAKS,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKL,QADL,CAFA,CADJ;AAQH;;;;EAnEkBxB,S;;AAsEvBO,QAAQ,GAAGL,OAAO,CAAC,UAAC4B,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAP,CAA0BvB,QAA1B,CAAX;AACA,eAAeA,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {connect} from 'react-redux';\nimport Link from 'next/link';\nimport NewsCard from '../components/NewsCard';\nimport Account from '../components/Account';\nimport firebase from \"firebase\";\n\nclass NewsList extends Component {\n\n    constructor(props){\n        console.log('NewsListのconstructor');\n        super(props);\n        this.logined = this.logined.bind(this);\n    }\n\n    // get data from Firebase\n    getNews = async () => {\n        // fill your API key!\n        const url = \"https://newsapi.org/v2/top-headlines?country=jp&apiKey=30d451b495234aae8b35d83d68082817\";\n        let self = this;\n\n        const result = await fetch(url);\n        const json = await result.json();\n\n        this.props.dispatch({\n            type : 'UPDATE_USER',\n            value : {\n                articles: json.articles\n            }\n        })\n    }\n\n    logined(){\n        console.log('loginしました');\n        //this.getFireData();\n    }\n\n    logouted(){\n        console.log('logoutしました');\n    }\n    \n    /*\n            <li key={index.toString}>\n                <Link href=\"/p/[id]\" as={`/p/${index}`}>\n                {article['title']}\n                </Link>\n            <ul>\n                <li key=\"0\"><img src={article['urlToImage']} width=\"100\" height=\"100\" /></li>\n                <li key=\"1\">{article['description']}</li>\n                <li key=\"2\">{article['content']}</li>\n            </ul>\n            </li>);\n    */\n\n    render() {\n        console.log('NewsListのrender()');\n        console.log('今のthis.propsは');\n        console.log(this.props);\n        this.props.articles.length === 0 && this.getNews();\n        const itemList = [];\n        this.props.articles.map((article, index) => {\n            itemList.push(\n                <NewsCard title={article['title']} image={article['urlToImage']} description={article['description']} index={index} />\n            );\n        })\n\n        return (\n            <div>\n                <Account onLogined={this.logined} onLogouted={this.logouted}/>\n            <ul>\n                {itemList}\n            </ul>\n            </div>\n        );\n    }\n}\n\nNewsList = connect((state) => state)(NewsList);\nexport default NewsList;"]},"metadata":{},"sourceType":"module"}