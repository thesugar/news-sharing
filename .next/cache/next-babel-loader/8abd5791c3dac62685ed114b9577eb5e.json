{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thesugar/news-sharing/components/Account.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\n\nvar Account =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Account, _Component);\n\n  function Account(props) {\n    var _this;\n\n    _classCallCheck(this, Account);\n\n    console.log('Account.jsのconstructor');\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Account).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"match_user\", function (result) {\n      var db = firebase.firestore(); // メールアドレスをもとに、マッチするユーザーを探してユーザーIDを取得\n      // 下のブロックの中でもresult.userは生きてるので他の認証情報とかを取ってくることもできる\n\n      db.collection(\"news-user\").where('email', '==', result.user.email).get().then(function (querySnapshot) {\n        // success\n        console.log(querySnapshot.docs[0].data());\n\n        _this.props.dispatch({\n          type: 'UPDATE_USER',\n          value: {\n            login: true,\n            userid: querySnapshot.docs[0].data().userid,\n            articles: _this.props.articles\n          }\n        });\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    });\n\n    _this.login_check = _this.login_check.bind(_assertThisInitialized(_this));\n    _this.match_user = _this.match_user.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Account, [{\n    key: \"login\",\n    value: function login() {\n      var _this2 = this;\n\n      console.log('Account.jsのlogin()');\n      var provider = new firebase.auth.GoogleAuthProvider();\n      var self = this;\n      var db = firebase.firestore();\n      firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n      firebase.auth().signInWithPopup(provider).then(function (result) {\n        _this2.match_user(result);\n\n        _this2.props.onLogined();\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      console.log(\"logout\");\n      firebase.auth().signOut();\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: false,\n          username: '(click here!)',\n          email: '',\n          articles: this.props.articles\n        }\n      });\n      this.props.onLogouted();\n    } // check if user is logged in or logged out\n\n  }, {\n    key: \"login_check\",\n    value: function login_check() {\n      console.log('Account.jsのlogin_check()');\n\n      if (this.props.login === undefined || this.props.login == false) {\n        this.login();\n      } else {\n        this.logout();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log('Account.jsのrender()');\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          // User is signed in.\n          _this3.username_ = user.displayName;\n        } else {// No user is signed in.\n        }\n      });\n      return __jsx(\"p\", {\n        className: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"acount\",\n        onClick: this.login_check,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"LOGINED: \", this.props.userid));\n    }\n  }]);\n\n  return Account;\n}(Component);\n\nAccount = connect(function (state) {\n  return state;\n})(Account);\nexport default Account;","map":{"version":3,"sources":["/Users/thesugar/news-sharing/components/Account.js"],"names":["React","Component","connect","firebase","Account","props","console","log","fontSize","padding","result","db","firestore","collection","where","user","email","get","then","querySnapshot","docs","data","dispatch","type","value","login","userid","articles","error","login_check","bind","match_user","provider","auth","GoogleAuthProvider","self","setPersistence","Auth","Persistence","LOCAL","signInWithPopup","onLogined","signOut","username","onLogouted","undefined","logout","onAuthStateChanged","username_","displayName","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\n\nclass Account extends Component {\n    style = {\n        fontSize: \"12pt\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        console.log('Account.jsのconstructor')\n        super(props);\n        this.login_check = this.login_check.bind(this);\n        this.match_user = this.match_user.bind(this);\n    }\n\n    match_user = (result) => {\n    \n        let db = firebase.firestore();\n        // メールアドレスをもとに、マッチするユーザーを探してユーザーIDを取得\n        // 下のブロックの中でもresult.userは生きてるので他の認証情報とかを取ってくることもできる\n        db.collection(\"news-user\")\n        .where('email', '==', result.user.email).get().then((querySnapshot) => {\n            // success\n            console.log(querySnapshot.docs[0].data());\n            this.props.dispatch({\n                type: 'UPDATE_USER',\n                value: {\n                    login: true,\n                    userid : querySnapshot.docs[0].data().userid,\n                    articles : this.props.articles\n                }\n            });\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    login(){\n        console.log('Account.jsのlogin()')\n        let provider = new firebase.auth.GoogleAuthProvider();\n        let self = this;\n        let db = firebase.firestore();\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n        firebase.auth().signInWithPopup(provider)\n        .then((result) => {\n            this.match_user(result);\n            this.props.onLogined();\n        });\n    }\n\n    logout(){\n        console.log(\"logout\");\n        firebase.auth().signOut();\n        this.props.dispatch({\n            type: 'UPDATE_USER',\n            value: {\n                login: false,\n                username: '(click here!)',\n                email: '',\n                articles: this.props.articles\n            }\n        });\n        this.props.onLogouted();\n    }\n\n    // check if user is logged in or logged out\n    login_check(){\n        console.log('Account.jsのlogin_check()');\n        if (this.props.login === undefined || this.props.login == false){\n            this.login();\n        } else {\n            this.logout();\n        }\n    }\n\n    render(){\n        console.log('Account.jsのrender()');\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n              // User is signed in.\n              this.username_ = user.displayName;\n            } else {\n              // No user is signed in.\n            }\n          });\n\n        return (\n            <p className=\"login\">\n                <span className=\"acount\"\n                onClick={this.login_check}>\n                    LOGINED: {this.props.userid}\n                </span>\n            </p>\n        );\n    }\n}\n\nAccount = connect((state) => state)(Account);\nexport default Account;"]},"metadata":{},"sourceType":"module"}