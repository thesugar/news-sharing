{"ast":null,"code":"var _jsxFileName = \"/Users/thesugar/news-sharing/components/NewsList.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport NewsCard from '../components/NewsCard';\nimport Account from '../components/Account';\nimport firebase from \"firebase\";\n\nclass NewsList extends Component {\n  constructor(props) {\n    console.log('NewsListのconstructor');\n    super(props);\n\n    _defineProperty(this, \"getNews\", async () => {\n      // fill your API key!\n      const url = \"https://newsapi.org/v2/everything?q=mufg&sortBy=popularity&apiKey=30d451b495234aae8b35d83d68082817\";\n      let self = this;\n      const result = await fetch(url);\n      const json = await result.json();\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          articles: json.articles\n        }\n      });\n    });\n\n    this.logined = this.logined.bind(this);\n  } // get data from Firebase\n\n\n  logined() {\n    console.log('loginしました'); //this.getFireData();\n  }\n\n  logouted() {\n    console.log('logoutしました');\n  }\n  /*\n          <li key={index.toString}>\n              <Link href=\"/p/[id]\" as={`/p/${index}`}>\n              {article['title']}\n              </Link>\n          <ul>\n              <li key=\"0\"><img src={article['urlToImage']} width=\"100\" height=\"100\" /></li>\n              <li key=\"1\">{article['description']}</li>\n              <li key=\"2\">{article['content']}</li>\n          </ul>\n          </li>);\n  */\n\n\n  render() {\n    console.log('NewsListのrender()');\n    console.log('今のthis.propsは');\n    console.log(this.props);\n    this.props.articles.length === 0 && this.getNews();\n    const itemList = [];\n    this.props.articles.map((article, index) => {\n      itemList.push(__jsx(NewsCard, {\n        title: article['title'],\n        image: article['urlToImage'],\n        description: article['description'],\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    });\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(Account, {\n      onLogined: this.logined,\n      onLogouted: this.logouted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), ReactDOM.createPortal(__jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"\\u30DD\\u30FC\\u30BF\\u30EB\"), document.getElementById('portal')), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, itemList));\n  }\n\n}\n\nNewsList = connect(state => state)(NewsList);\nexport default NewsList;","map":{"version":3,"sources":["/Users/thesugar/news-sharing/components/NewsList.js"],"names":["React","Component","ReactDOM","connect","Link","NewsCard","Account","firebase","NewsList","constructor","props","console","log","url","self","result","fetch","json","dispatch","type","value","articles","logined","bind","logouted","render","length","getNews","itemList","map","article","index","push","createPortal","document","getElementById","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAE7BQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAMF,KAAN;;AAFc,qCAOR,YAAY;AAClB;AACA,YAAMG,GAAG,GAAG,oGAAZ;AACA,UAAIC,IAAI,GAAG,IAAX;AAEA,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA1B;AACA,YAAMI,IAAI,GAAG,MAAMF,MAAM,CAACE,IAAP,EAAnB;AAEA,WAAKP,KAAL,CAAWQ,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAG,aADS;AAEhBC,QAAAA,KAAK,EAAG;AACJC,UAAAA,QAAQ,EAAEJ,IAAI,CAACI;AADX;AAFQ,OAApB;AAMH,KArBiB;;AAGd,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACH,GAN4B,CAQ7B;;;AAiBAD,EAAAA,OAAO,GAAE;AACLX,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EADK,CAEL;AACH;;AAEDY,EAAAA,QAAQ,GAAE;AACNb,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;AAED;;;;;;;;;;;;;;AAaAa,EAAAA,MAAM,GAAG;AACLd,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACA,SAAKA,KAAL,CAAWW,QAAX,CAAoBK,MAApB,KAA+B,CAA/B,IAAoC,KAAKC,OAAL,EAApC;AACA,UAAMC,QAAQ,GAAG,EAAjB;AACA,SAAKlB,KAAL,CAAWW,QAAX,CAAoBQ,GAApB,CAAwB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACxCH,MAAAA,QAAQ,CAACI,IAAT,CACI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEF,OAAO,CAAC,OAAD,CAAxB;AAAmC,QAAA,KAAK,EAAEA,OAAO,CAAC,YAAD,CAAjD;AAAiE,QAAA,WAAW,EAAEA,OAAO,CAAC,aAAD,CAArF;AAAsG,QAAA,KAAK,EAAEC,KAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD;AAMA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,OAAD;AAAS,MAAA,SAAS,EAAE,KAAKT,OAAzB;AAAkC,MAAA,UAAU,EAAE,KAAKE,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKtB,QAAQ,CAAC+B,YAAT,CAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAtB,EAAuCC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAvC,CAFL,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,QADL,CAHA,CADJ;AASH;;AApE4B;;AAuEjCpB,QAAQ,GAAGL,OAAO,CAAEiC,KAAD,IAAWA,KAAZ,CAAP,CAA0B5B,QAA1B,CAAX;AACA,eAAeA,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {connect} from 'react-redux';\nimport Link from 'next/link';\nimport NewsCard from '../components/NewsCard';\nimport Account from '../components/Account';\nimport firebase from \"firebase\";\n\nclass NewsList extends Component {\n\n    constructor(props){\n        console.log('NewsListのconstructor');\n        super(props);\n        this.logined = this.logined.bind(this);\n    }\n\n    // get data from Firebase\n    getNews = async () => {\n        // fill your API key!\n        const url = \"https://newsapi.org/v2/everything?q=mufg&sortBy=popularity&apiKey=30d451b495234aae8b35d83d68082817\";\n        let self = this;\n\n        const result = await fetch(url);\n        const json = await result.json();\n\n        this.props.dispatch({\n            type : 'UPDATE_USER',\n            value : {\n                articles: json.articles\n            }\n        })\n    }\n\n    logined(){\n        console.log('loginしました');\n        //this.getFireData();\n    }\n\n    logouted(){\n        console.log('logoutしました');\n    }\n    \n    /*\n            <li key={index.toString}>\n                <Link href=\"/p/[id]\" as={`/p/${index}`}>\n                {article['title']}\n                </Link>\n            <ul>\n                <li key=\"0\"><img src={article['urlToImage']} width=\"100\" height=\"100\" /></li>\n                <li key=\"1\">{article['description']}</li>\n                <li key=\"2\">{article['content']}</li>\n            </ul>\n            </li>);\n    */\n\n    render() {\n        console.log('NewsListのrender()');\n        console.log('今のthis.propsは');\n        console.log(this.props);\n        this.props.articles.length === 0 && this.getNews();\n        const itemList = [];\n        this.props.articles.map((article, index) => {\n            itemList.push(\n                <NewsCard title={article['title']} image={article['urlToImage']} description={article['description']} index={index} />\n            );\n        })\n\n        return (\n            <div>\n                <Account onLogined={this.logined} onLogouted={this.logouted}/>\n                {ReactDOM.createPortal(<div>ポータル</div>, document.getElementById('portal'))}\n            <ul>\n                {itemList}\n            </ul>\n            </div>\n        );\n    }\n}\n\nNewsList = connect((state) => state)(NewsList);\nexport default NewsList;"]},"metadata":{},"sourceType":"module"}