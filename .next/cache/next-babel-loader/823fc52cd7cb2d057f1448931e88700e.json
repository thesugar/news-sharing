{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thesugar/news-sharing/components/NewsList.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\n\nvar NewsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewsList, _Component);\n\n  function NewsList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewsList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewsList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      articles: [],\n      refreshing: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getNews\", function _callee() {\n      var url, result, json;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                refreshing: true\n              });\n\n              url = \"https://newsapi.org/v2/everything?q=mufg&from=2019-12-25&to=2020-01-24&sortBy=popularity&apiKey=30d451b495234aae8b35d83d68082817\";\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch(url));\n\n            case 5:\n              result = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(result.json());\n\n            case 8:\n              json = _context.sent;\n\n              // console.log(json);\n              _this.setState({\n                articles: json.articles,\n                refreshing: false\n              });\n\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                refreshing: false\n              });\n\n              console.log(_context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 12]]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.getNews();\n    });\n\n    return _this;\n  }\n\n  _createClass(NewsList, [{\n    key: \"render\",\n    value: function render() {\n      var titleList = [];\n      this.state.articles.map(function (article) {\n        titleList.push(__jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, article['title']));\n      });\n      console.log(this.state.articles);\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, titleList));\n    }\n  }]);\n\n  return NewsList;\n}(Component);\n\nexport { NewsList as default };","map":{"version":3,"sources":["/Users/thesugar/news-sharing/components/NewsList.js"],"names":["React","Component","NewsList","articles","refreshing","setState","url","fetch","result","json","console","log","getNews","titleList","state","map","article","push"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAEqBC,Q;;;;;;;;;;;;;;;;;;4DAET;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,UAAU,EAAE;AAFR,K;;8DAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,oBAAKC,QAAL,CAAc;AAAED,gBAAAA,UAAU,EAAE;AAAd,eAAd;;AACME,cAAAA,GAFA,GAEM,kIAFN;AAAA;AAAA;AAAA,+CAImBC,KAAK,CAACD,GAAD,CAJxB;;AAAA;AAIIE,cAAAA,MAJJ;AAAA;AAAA,+CAKiBA,MAAM,CAACC,IAAP,EALjB;;AAAA;AAKIA,cAAAA,IALJ;;AAMF;AACA,oBAAKJ,QAAL,CAAc;AACVF,gBAAAA,QAAQ,EAAEM,IAAI,CAACN,QADL;AAEVC,gBAAAA,UAAU,EAAE;AAFF,eAAd;;AAPE;AAAA;;AAAA;AAAA;AAAA;;AAYF,oBAAKC,QAAL,CAAc;AAAED,gBAAAA,UAAU,EAAE;AAAd,eAAd;;AACAM,cAAAA,OAAO,CAACC,GAAR;;AAbE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;wEAiBU,YAAM;AACtB,YAAKC,OAAL;AACH,K;;;;;;;6BAEQ;AACL,UAAMC,SAAS,GAAG,EAAlB;AACA,WAAKC,KAAL,CAAWX,QAAX,CAAoBY,GAApB,CAAwB,UAAAC,OAAO,EAAI;AAC/BH,QAAAA,SAAS,CAACI,IAAV,CAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,OAAO,CAAC,OAAD,CAAZ,CAAf;AACH,OAFD;AAIAN,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWX,QAAvB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKU,SADL,CADA,CADJ;AAOH;;;;EA1CiCZ,S;;SAAjBC,Q","sourcesContent":["import React, {Component} from 'react';\n\nexport default class NewsList extends Component {\n\n    state = {\n        articles: [],\n        refreshing: false,\n    }\n\n    getNews = async () => {\n        this.setState({ refreshing: true });\n        const url = \"https://newsapi.org/v2/everything?q=mufg&from=2019-12-25&to=2020-01-24&sortBy=popularity&apiKey=30d451b495234aae8b35d83d68082817\";\n        try {\n            const result = await fetch(url);\n            const json = await result.json();\n            // console.log(json);\n            this.setState({\n                articles: json.articles,\n                refreshing: false\n            });\n        } catch (e) {\n            this.setState({ refreshing: false });\n            console.log(e);\n        }\n    }\n\n    componentDidMount = () => { \n        this.getNews();\n    }\n\n    render() {\n        const titleList = [];\n        this.state.articles.map(article => {\n            titleList.push(<li>{article['title']}</li>);\n        })\n        \n        console.log(this.state.articles);\n        return (\n            <div>\n            <ul>\n                {titleList}\n            </ul>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}