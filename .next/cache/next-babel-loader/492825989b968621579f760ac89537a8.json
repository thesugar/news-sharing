{"ast":null,"code":"var _jsxFileName = \"/Users/thesugar/news-sharing/components/ShareNews.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\n\nclass ShareNews extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"doAction\", (article, userid, e) => {\n      console.log('doActionの中');\n      console.log('userid is');\n      console.log(userid);\n      let db = firebase.firestore(); // Firestore の登録処理\n\n      db.collection('share').add({\n        title: article.title,\n        description: article.description,\n        image: article.urlToImage,\n        url: article.url,\n        sharedFrom: userid //sharedTo : \n\n      }).then(doc => {\n        console.log(`共有しました`);\n      }).catch(error => {\n        console.log(`共有に失敗しました。リトライしてください。`);\n      });\n      this.setState({\n        title: '',\n        description: '',\n        image: '',\n        url: ''\n      });\n    });\n\n    if (this.props.login == false) {\n      Router.push('/');\n    }\n\n    this.state = {\n      title: '',\n      description: '',\n      url: '',\n      image: ''\n    };\n    this.logined = this.logined.bind(this);\n    this.doAction = this.doAction.bind(this);\n  } // login, logout 処理\n\n\n  logined() {\n    console.log('logined.');\n  }\n\n  logouted() {\n    Router.push('/');\n  } // データの登録処理\n\n\n  render() {\n    const article = this.props.article;\n    const userid = this.props.userid;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: e => this.doAction(article, userid, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\u5171\\u6709\\u3059\\u308B\")) // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n    ;\n  }\n\n}\n\nShareNews = connect(state => state)(ShareNews);\nexport default ShareNews;","map":{"version":3,"sources":["/Users/thesugar/news-sharing/components/ShareNews.js"],"names":["React","Component","connect","Router","firebase","ShareNews","constructor","props","article","userid","e","console","log","db","firestore","collection","add","title","description","image","urlToImage","url","sharedFrom","then","doc","catch","error","setState","login","push","state","logined","bind","doAction","logouted","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAE9BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,sCAyBP,CAACC,OAAD,EAAUC,MAAV,EAAkBC,CAAlB,KAAwB;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,UAAII,EAAE,GAAGT,QAAQ,CAACU,SAAT,EAAT,CAJ+B,CAK/B;;AAEAD,MAAAA,EAAE,CAACE,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AACvBC,QAAAA,KAAK,EAAET,OAAO,CAACS,KADQ;AAEvBC,QAAAA,WAAW,EAAEV,OAAO,CAACU,WAFE;AAGvBC,QAAAA,KAAK,EAAEX,OAAO,CAACY,UAHQ;AAIvBC,QAAAA,GAAG,EAAEb,OAAO,CAACa,GAJU;AAKvBC,QAAAA,UAAU,EAAEb,MALW,CAMvB;;AANuB,OAA3B,EAQCc,IARD,CAQOC,GAAD,IAAS;AACXb,QAAAA,OAAO,CAACC,GAAR,CAAa,QAAb;AACH,OAVD,EAWCa,KAXD,CAWQC,KAAD,IAAW;AACdf,QAAAA,OAAO,CAACC,GAAR,CAAa,uBAAb;AACH,OAbD;AAeA,WAAKe,QAAL,CAAc;AACVV,QAAAA,KAAK,EAAE,EADG;AAEVC,QAAAA,WAAW,EAAE,EAFH;AAGVC,QAAAA,KAAK,EAAE,EAHG;AAIVE,QAAAA,GAAG,EAAE;AAJK,OAAd;AAMH,KArDiB;;AAEd,QAAI,KAAKd,KAAL,CAAWqB,KAAX,IAAoB,KAAxB,EAA+B;AAC3BzB,MAAAA,MAAM,CAAC0B,IAAP,CAAY,GAAZ;AACH;;AACD,SAAKC,KAAL,GAAa;AACTb,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTG,MAAAA,GAAG,EAAE,EAHI;AAITF,MAAAA,KAAK,EAAE;AAJE,KAAb;AAMA,SAAKY,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACH,GAf6B,CAiB9B;;;AACAD,EAAAA,OAAO,GAAE;AACLpB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;;AAEDsB,EAAAA,QAAQ,GAAE;AACN/B,IAAAA,MAAM,CAAC0B,IAAP,CAAY,GAAZ;AACH,GAxB6B,CA0B9B;;;AA+BAM,EAAAA,MAAM,GAAE;AACJ,UAAM3B,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMC,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAA1B;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAGC,CAAD,IAAO,KAAKuB,QAAL,CAAczB,OAAd,EAAuBC,MAAvB,EAA+BC,CAA/B,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADJ,CAII;AAJJ;AAMH;;AAlE6B;;AAqElCL,SAAS,GAAGH,OAAO,CAAE4B,KAAD,IAAWA,KAAZ,CAAP,CAA2BzB,SAA3B,CAAZ;AACA,eAAeA,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\n\nclass ShareNews extends Component {\n\n    constructor(props){\n        super(props);\n        if (this.props.login == false) {\n            Router.push('/');\n        }\n        this.state = {\n            title: '',\n            description: '',\n            url: '',\n            image: '',\n        }\n        this.logined = this.logined.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        console.log('logined.');\n    }\n\n    logouted(){\n        Router.push('/');\n    }\n\n    // データの登録処理\n    doAction = (article, userid, e) => {    \n        console.log('doActionの中');\n        console.log('userid is');\n        console.log(userid);\n        let db = firebase.firestore();\n        // Firestore の登録処理\n\n        db.collection('share').add({\n            title: article.title,\n            description: article.description,\n            image: article.urlToImage,\n            url: article.url,\n            sharedFrom: userid,\n            //sharedTo : \n        })\n        .then((doc) => {\n            console.log(`共有しました`);\n        })\n        .catch((error) => {\n            console.log(`共有に失敗しました。リトライしてください。`);\n        });\n\n        this.setState({\n            title: '',\n            description: '',\n            image: '',\n            url: '',\n        })\n    }\n\n    render(){\n        const article = this.props.article;\n        const userid = this.props.userid;\n        return (\n            <div>\n                <button onClick={(e) => this.doAction(article, userid, e)}>共有する</button>\n            </div>\n            // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n        );\n    }\n}\n\nShareNews = connect((state) => state) (ShareNews);\nexport default ShareNews;"]},"metadata":{},"sourceType":"module"}