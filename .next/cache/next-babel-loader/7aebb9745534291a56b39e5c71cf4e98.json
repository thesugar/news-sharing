{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thesugar/news-sharing/components/NewsList.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport Link from 'next/link';\n\nvar NewsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewsList, _Component);\n\n  function NewsList(props) {\n    var _this;\n\n    _classCallCheck(this, NewsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewsList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      articles: [],\n      refreshing: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getNews\", function _callee() {\n      var url, result, json;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                refreshing: true\n              }); // fill your API key!\n\n\n              url = \"https://newsapi.org/v2/everything?q=mufg&from=2019-12-25&to=2020-01-24&sortBy=popularity&apiKey=30d451b495234aae8b35d83d68082817\";\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch(url));\n\n            case 5:\n              result = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(result.json());\n\n            case 8:\n              json = _context.sent;\n\n              // console.log(json);\n              _this.props.dispatch({\n                type: 'UPDATE_USER',\n                value: {\n                  articles: json.articles,\n                  refleshing: false\n                }\n              });\n              /*\n              this.setState({\n                  articles: json.articles,\n                  refreshing: false\n              });\n              */\n\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n\n              /*\n              this.setState({ refreshing: false });\n              */\n              console.log(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 12]]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.getNews();\n    });\n\n    return _this;\n  }\n\n  _createClass(NewsList, [{\n    key: \"render\",\n    value: function render() {\n      var itemList = [];\n      var items = [];\n      this.props.articles.map(function (article, index) {\n        items.push(article);\n        itemList.push(__jsx(\"li\", {\n          key: index.toString,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, __jsx(Link, {\n          href: \"/p/[id]\",\n          as: \"/p/\".concat(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, article['title'])), __jsx(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, __jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, __jsx(\"img\", {\n          src: article['urlToImage'],\n          width: \"100\",\n          height: \"100\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        })), __jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, article['description']), __jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, article['content']))));\n      });\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          itemArray: items\n        }\n      });\n      console.log(this.props.articles);\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, itemList));\n    }\n  }]);\n\n  return NewsList;\n}(Component);\n\nNewsList = connect(function (state) {\n  return state;\n})(NewsList);\nexport default NewsList;","map":{"version":3,"sources":["/Users/thesugar/news-sharing/components/NewsList.js"],"names":["React","Component","connect","Router","Link","NewsList","props","articles","refreshing","setState","url","fetch","result","json","dispatch","type","value","refleshing","console","log","getNews","itemList","items","map","article","index","push","toString","itemArray","state"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Router from 'next/router';\nimport Link from 'next/link';\n\nclass NewsList extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    state = {\n        articles: [],\n        refreshing: false,\n    }\n\n    getNews = async () => {\n        this.setState({ refreshing: true });\n        // fill your API key!\n        const url = \"https://newsapi.org/v2/everything?q=mufg&from=2019-12-25&to=2020-01-24&sortBy=popularity&apiKey=30d451b495234aae8b35d83d68082817\";\n        try {\n            const result = await fetch(url);\n            const json = await result.json();\n            // console.log(json);\n\n            this.props.dispatch({\n                type: 'UPDATE_USER',\n                value: {\n                    articles : json.articles,\n                    refleshing : false\n                    }\n            });\n\n            /*\n            this.setState({\n                articles: json.articles,\n                refreshing: false\n            });\n            */\n        } catch (e) {\n            /*\n            this.setState({ refreshing: false });\n            */\n            console.log(e);\n        }\n    }\n\n    componentDidMount = () => { \n        this.getNews();\n    }\n\n    render() {\n        const itemList = [];\n        const items = []\n        this.props.articles.map((article, index) => {\n\n            items.push(article);\n\n            itemList.push(\n            <li key={index.toString}>\n                <Link href=\"/p/[id]\" as={`/p/${index}`}>\n                    <a>{article['title']}</a>\n                 </Link>\n            <ul>\n                <li><img src={article['urlToImage']} width=\"100\" height=\"100\" /></li>\n                <li>{article['description']}</li>\n                <li>{article['content']}</li>\n            </ul>\n            </li>);\n        })\n\n        this.props.dispatch({\n            type: 'UPDATE_USER',\n            value: {\n                itemArray : items\n                }\n        });\n\n        console.log(this.props.articles);\n        return (\n            <div>\n            <ul>\n                {itemList}\n            </ul>\n            </div>\n        );\n    }\n}\n\nNewsList = connect((state) => state)(NewsList);\nexport default NewsList;"]},"metadata":{},"sourceType":"module"}