{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thesugar/news-sharing/components/SelectWho.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\n\nvar SelectWho =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SelectWho, _Component);\n\n  function SelectWho(props) {\n    var _this;\n\n    _classCallCheck(this, SelectWho);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectWho).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getUserList\", function () {\n      var self = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _assertThisInitialized(_this);\n      var db = firebase.firestore(); // firestore のオブジェクト取得\n\n      db.collection('news-user').get().then(function (querySnapshot) {\n        var _this2 = this;\n\n        var userList = [];\n        querySnapshot.forEach(function (doc) {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          userList.push(__jsx(\"li\", {\n            key: doc.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, __jsx(\"input\", {\n            type: \"checkbox\",\n            onChange: function onChange(e) {\n              return _this2.onChecked(doc.data().userid, e);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, doc.data().userid)));\n        });\n        self.setState({\n          userList: userList\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"doAction\", function (article, userid, e) {\n      console.log('doActionの中');\n      console.log('userid is');\n      console.log(userid);\n      var db = firebase.firestore(); // Firestore の登録処理\n\n      db.collection('share').add({\n        title: article.title,\n        description: article.description,\n        image: article.urlToImage,\n        url: article.url,\n        sharedFrom: userid,\n        sharedTo: _this.state.userList\n      }).then(function (doc) {\n        console.log(\"\\u5171\\u6709\\u3057\\u307E\\u3057\\u305F\");\n      })[\"catch\"](function (error) {\n        console.log(\"\\u5171\\u6709\\u306B\\u5931\\u6557\\u3057\\u307E\\u3057\\u305F\\u3002\\u30EA\\u30C8\\u30E9\\u30A4\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\");\n      });\n\n      _this.setState({\n        title: '',\n        description: '',\n        image: '',\n        url: ''\n      });\n    });\n\n    if (_this.props.login == false) {\n      Router.push('/');\n    }\n\n    _this.state = {\n      userList: []\n    };\n    _this.logined = _this.logined.bind(_assertThisInitialized(_this));\n    _this.onChangeTitle = _this.onChecked.bind(_assertThisInitialized(_this));\n    _this.doAction = _this.doAction.bind(_assertThisInitialized(_this));\n    return _this;\n  } // login, logout 処理\n\n\n  _createClass(SelectWho, [{\n    key: \"logined\",\n    value: function logined() {\n      console.log('logined.');\n    }\n  }, {\n    key: \"logouted\",\n    value: function logouted() {\n      Router.push('/');\n    }\n  }, {\n    key: \"onChecked\",\n    value: function onChecked(userid, e) {\n      var currentSelectedUsers = this.state.currentSelectedUsers ? this.state.currentSelectedUsers : [];\n      e.target.checked ? this.setState({\n        currentSelectedUsers: currentSelectedUsers.push(userid)\n      }) : this.setState({\n        currentSelectedUsers: currentSelectedUsers.filter(function (elem) {\n          return elem !== userid;\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var article = this.props.article;\n      var userid = this.props.userid;\n      var userList = this.state.userList || this.getUserList();\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, userList), __jsx(\"button\", {\n        onClick: function onClick(e) {\n          return _this3.doAction(article, userid, e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"\\u78BA\\u5B9A\")) // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n      ;\n    }\n  }]);\n\n  return SelectWho;\n}(Component);\n\nSelectWho = connect(function (state) {\n  return state;\n})(SelectWho);\nexport default SelectWho;","map":{"version":3,"sources":["/Users/thesugar/news-sharing/components/SelectWho.js"],"names":["React","Component","connect","Router","firebase","SelectWho","props","self","db","firestore","collection","get","then","querySnapshot","userList","forEach","doc","console","log","id","data","push","e","onChecked","userid","setState","article","add","title","description","image","urlToImage","url","sharedFrom","sharedTo","state","error","login","logined","bind","onChangeTitle","doAction","currentSelectedUsers","target","checked","filter","elem","getUserList"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\n\nclass SelectWho extends Component {\n\n    constructor(props){\n        super(props);\n        if (this.props.login == false) {\n            Router.push('/');\n        }\n        this.state = {\n            userList : []\n        }\n\n        this.logined = this.logined.bind(this);\n        this.onChangeTitle = this.onChecked.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        console.log('logined.');\n    }\n\n    logouted(){\n        Router.push('/');\n    }\n\n    onChecked(userid, e) {\n        const currentSelectedUsers = this.state.currentSelectedUsers ? this.state.currentSelectedUsers : [];\n\n        e.target.checked ? \n        this.setState({currentSelectedUsers : currentSelectedUsers.push(userid)})\n        :\n        this.setState({currentSelectedUsers : currentSelectedUsers.filter(elem => elem !== userid)})\n    }\n\n    getUserList = (self = this) => {\n        let db = firebase.firestore(); // firestore のオブジェクト取得\n    \n        db.collection('news-user')\n        .get()\n        .then(function(querySnapshot) {\n            let userList = [];\n            querySnapshot.forEach((doc) => {\n            // doc.data() is never undefined for query doc snapshots\n            console.log(doc.id, \" => \", doc.data());\n            userList.push(<li key={doc.id}><input type=\"checkbox\" onChange={(e) => this.onChecked(doc.data().userid, e)}>{doc.data().userid}</input></li>);\n            })\n            self.setState({userList: userList});\n        });\n    }\n\n    // データの登録処理\n    doAction = (article, userid, e) => {    \n        console.log('doActionの中');\n        console.log('userid is');\n        console.log(userid);\n        let db = firebase.firestore();\n        // Firestore の登録処理\n\n        db.collection('share').add({\n            title: article.title,\n            description: article.description,\n            image: article.urlToImage,\n            url: article.url,\n            sharedFrom: userid,\n            sharedTo : this.state.userList\n        })\n        .then((doc) => {\n            console.log(`共有しました`);\n        })\n        .catch((error) => {\n            console.log(`共有に失敗しました。リトライしてください。`);\n        });\n\n        this.setState({\n            title: '',\n            description: '',\n            image: '',\n            url: '',\n        })\n    }\n\n    render(){\n        const article = this.props.article;\n        const userid = this.props.userid;\n        const userList = this.state.userList || this.getUserList();\n\n        return (\n            <div>\n                <ul>{userList}</ul>\n                <button onClick={(e) => this.doAction(article, userid, e)}>確定</button>\n            </div>\n            // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n        );\n    }\n}\n\nSelectWho = connect((state) => state) (SelectWho);\nexport default SelectWho;"]},"metadata":{},"sourceType":"module"}