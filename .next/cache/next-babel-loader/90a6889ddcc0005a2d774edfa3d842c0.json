{"ast":null,"code":"var _jsxFileName = \"/Users/RyoheiSato/news-sharing/components/SelectWho.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport SimpleModal from '../components/Modal';\n\nclass SelectWho extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getUserList\", (self = this) => {\n      console.log('now inside getUserList function');\n      let db = firebase.firestore(); // firestore のオブジェクト取得\n\n      db.collection('news-user').get().then(function (querySnapshot) {\n        let userList = [];\n        querySnapshot.forEach(doc => {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          userList.push(__jsx(\"li\", {\n            key: doc.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, __jsx(\"input\", {\n            type: \"checkbox\",\n            onChange: e => self.onChecked(doc.data().userid, e),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }), doc.data().userid));\n        });\n        self.setState({\n          userList: userList\n        });\n      });\n    });\n\n    _defineProperty(this, \"onChangeText\", e => {\n      this.setState({\n        textAreaValue: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"doAction\", (article, userid, e) => {\n      console.log('doActionの中');\n      console.log('userid is');\n      console.log(userid);\n      let db = firebase.firestore(); // Firestore の登録処理\n\n      if (this.state.currentSelectedUsers.length === 0 || this.state.currentSelectedUsers === null || this.state.currentSelectedUsers === undefined) {\n        this.setState({\n          message: '共有する相手を1人以上選択してください'\n        });\n        return null;\n      }\n\n      db.collection('share').add({\n        title: article.title,\n        description: article.description,\n        image: article.urlToImage,\n        url: article.url,\n        sharedFrom: userid,\n        sharedTo: this.state.currentSelectedUsers,\n        comment: this.state.textAreaValue // コメントへの返信を実装するときにはcommentを配列にする（か都度フィールドを追加する？），コメントへのいいねを実装するならネストJSONにする?\n\n      }).then(doc => {\n        console.log(`共有しました`);\n        this.setState({\n          message: '共有しました！',\n          textAreaValue: ''\n        });\n        setTimeout(() => {\n          this.setState({\n            message: null\n          });\n        }, 2000);\n      }).catch(error => {\n        console.log(`共有に失敗しました。リトライしてください。`);\n        this.setState({\n          success: false,\n          afterClicked: true\n        });\n        setTimeout(() => {\n          this.setState({\n            message: null\n          });\n        }, 2000);\n      });\n      this.setState({\n        title: '',\n        description: '',\n        image: '',\n        url: '',\n        sharedFrom: '',\n        sharedTo: '',\n        comment: ''\n      });\n    });\n\n    if (this.props.login == false) {\n      Router.push('/');\n    }\n\n    this.state = {\n      userList: [],\n      textAreaValue: '',\n      message: null\n    };\n    this.logined = this.logined.bind(this);\n    this.onChecked = this.onChecked.bind(this);\n    this.doAction = this.doAction.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n  } // login, logout 処理\n\n\n  logined() {\n    console.log('logined.');\n  }\n\n  logouted() {\n    Router.push('/');\n  }\n\n  onChecked(userid, e) {\n    const currentSelectedUsers = this.state.currentSelectedUsers ? this.state.currentSelectedUsers : [];\n    currentSelectedUsers.push(userid); // はまりポイント：\n    // 以下で {currentSelectedUsers : currentSelectedUsers.push(userid)}としたら\n    // currentSelectedUsers に 1 という数字が入って配列じゃないためpushできないという現象\n    // Array.push は 戻り値として length を返すため\n\n    e.target.checked ? this.setState({\n      currentSelectedUsers: currentSelectedUsers\n    }) : this.setState({\n      currentSelectedUsers: currentSelectedUsers.filter(elem => elem !== userid)\n    });\n  }\n\n  render() {\n    const article = this.props.article;\n    const userid = this.props.userid;\n    (this.state.userList.length === 0 || this.state.userList === undefined) && this.getUserList();\n    const userList = this.state.userList;\n    console.log('renderの中でuserListがとれてるか');\n    console.log(userList);\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, userList), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(\"textarea\", {\n      value: this.state.textAreaValue,\n      onChange: this.onChangeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      onClick: e => this.doAction(article, userid, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"\\u78BA\\u5B9A\"), this.state.message) // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n    ;\n  }\n\n}\n\nSelectWho = connect(state => state)(SelectWho);\nexport default SelectWho;","map":{"version":3,"sources":["/Users/RyoheiSato/news-sharing/components/SelectWho.js"],"names":["React","Component","connect","Router","firebase","SimpleModal","SelectWho","constructor","props","self","console","log","db","firestore","collection","get","then","querySnapshot","userList","forEach","doc","id","data","push","e","onChecked","userid","setState","textAreaValue","target","value","article","state","currentSelectedUsers","length","undefined","message","add","title","description","image","urlToImage","url","sharedFrom","sharedTo","comment","setTimeout","catch","error","success","afterClicked","login","logined","bind","doAction","onChangeText","logouted","checked","filter","elem","render","getUserList"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport SimpleModal from '../components/Modal'\n\nclass SelectWho extends Component {\n\n    constructor(props){\n        super(props);\n        if (this.props.login == false) {\n            Router.push('/');\n        }\n        this.state = {\n            userList : [],\n            textAreaValue : '',\n            message : null\n        }\n\n        this.logined = this.logined.bind(this);\n        this.onChecked = this.onChecked.bind(this);\n        this.doAction = this.doAction.bind(this);\n        this.onChangeText = this.onChangeText.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        console.log('logined.');\n    }\n\n    logouted(){\n        Router.push('/');\n    }\n\n    onChecked(userid, e) {\n        const currentSelectedUsers = this.state.currentSelectedUsers ? this.state.currentSelectedUsers : [];\n        currentSelectedUsers.push(userid)\n        // はまりポイント：\n        // 以下で {currentSelectedUsers : currentSelectedUsers.push(userid)}としたら\n        // currentSelectedUsers に 1 という数字が入って配列じゃないためpushできないという現象\n        // Array.push は 戻り値として length を返すため\n        e.target.checked ? \n        this.setState({currentSelectedUsers : currentSelectedUsers})\n        :\n        this.setState({currentSelectedUsers : currentSelectedUsers.filter(elem => elem !== userid)})\n    }\n\n    getUserList = (self = this) => {\n        console.log('now inside getUserList function');\n        let db = firebase.firestore(); // firestore のオブジェクト取得\n    \n        db.collection('news-user')\n        .get()\n        .then(function(querySnapshot) {\n            let userList = [];\n            querySnapshot.forEach((doc) => {\n            // doc.data() is never undefined for query doc snapshots\n            console.log(doc.id, \" => \", doc.data());\n            userList.push(<li key={doc.id}><input type=\"checkbox\" onChange={(e) => self.onChecked(doc.data().userid, e)} />{doc.data().userid}</li>);\n            })\n            self.setState({userList: userList});\n        });\n    }\n\n    onChangeText = e => {\n        this.setState({textAreaValue: e.target.value});\n    }\n\n    // データの登録処理\n    doAction = (article, userid, e) => {    \n        console.log('doActionの中');\n        console.log('userid is');\n        console.log(userid);\n        let db = firebase.firestore();\n        // Firestore の登録処理\n\n        if (this.state.currentSelectedUsers.length === 0 || this.state.currentSelectedUsers === null || this.state.currentSelectedUsers === undefined){\n            this.setState({message : '共有する相手を1人以上選択してください'});\n            return null;\n        }\n\n        db.collection('share').add({\n            title: article.title,\n            description: article.description,\n            image: article.urlToImage,\n            url: article.url,\n            sharedFrom: userid,\n            sharedTo : this.state.currentSelectedUsers,\n            comment : this.state.textAreaValue // コメントへの返信を実装するときにはcommentを配列にする（か都度フィールドを追加する？），コメントへのいいねを実装するならネストJSONにする?\n        })\n        .then((doc) => {\n            console.log(`共有しました`);\n            this.setState({message: '共有しました！', textAreaValue: ''});\n            setTimeout(() => {this.setState({message: null})}, 2000);\n        })\n        .catch((error) => {\n            console.log(`共有に失敗しました。リトライしてください。`);\n            this.setState({success: false, afterClicked: true});\n            setTimeout(() => {this.setState({message: null})}, 2000);\n        });\n\n        this.setState({\n            title: '',\n            description: '',\n            image: '',\n            url: '',\n            sharedFrom : '',\n            sharedTo : '',\n            comment : ''\n        })\n    }\n\n    render(){\n        const article = this.props.article;\n        const userid = this.props.userid;\n        (this.state.userList.length === 0 || this.state.userList === undefined) && this.getUserList();\n        const userList = this.state.userList;\n        console.log('renderの中でuserListがとれてるか')\n        console.log(userList);\n        return (\n            <div>\n                <ul>{userList}</ul>\n                <div>\n                <textarea value={this.state.textAreaValue} onChange={this.onChangeText} />\n                </div>\n                <button onClick={(e) => this.doAction(article, userid, e)}>確定</button>\n                {this.state.message}\n            </div>\n            // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n        );\n    }\n}\n\nSelectWho = connect((state) => state) (SelectWho);\nexport default SelectWho;"]},"metadata":{},"sourceType":"module"}