{"ast":null,"code":"var _jsxFileName = \"/Users/thesugar/news-sharing/components/Account.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    this.login_check = this.login_check.bind(this);\n  }\n\n  login() {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    let self = this;\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n    firebase.auth().signInWithPopup(provider).then(result => {\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: true,\n          username: result.user.displayName,\n          email: result.user.email,\n          data: this.props.data,\n          items: this.props.items\n        }\n      });\n      this.props.onLogined();\n    });\n  }\n\n  logout() {\n    console.log(\"logout\");\n    firebase.auth().signOut();\n    this.props.dispatch({\n      type: 'UPDATE_USER',\n      value: {\n        login: false,\n        username: '(click here!)',\n        email: '',\n        data: [],\n        items: []\n      }\n    });\n    this.props.onLogouted();\n  } // check if user is logged in or logged out\n\n\n  login_check() {\n    if (this.props.login == false) {\n      this.login();\n    } else {\n      this.logout();\n    }\n  }\n\n  render() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // User is signed in.\n        this.username_ = user.displayName;\n      } else {// No user is signed in.\n      }\n    });\n    return __jsx(\"p\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"acount\",\n      onClick: this.login_check,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"LOGINED: \", this.props.username));\n  }\n\n}\n\nAccount = connect(state => state)(Account);\nexport default Account;","map":{"version":3,"sources":["/Users/thesugar/news-sharing/components/Account.js"],"names":["React","Component","connect","firebase","Account","constructor","props","login_check","bind","login","provider","auth","GoogleAuthProvider","self","setPersistence","Auth","Persistence","LOCAL","signInWithPopup","then","result","dispatch","type","value","username","user","displayName","email","data","items","onLogined","logout","console","log","signOut","onLogouted","render","onAuthStateChanged","username_","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAE5BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDC,EAAAA,KAAK,GAAE;AACH,QAAIC,QAAQ,GAAG,IAAIP,QAAQ,CAACQ,IAAT,CAAcC,kBAAlB,EAAf;AACA,QAAIC,IAAI,GAAG,IAAX;AACAV,IAAAA,QAAQ,CAACQ,IAAT,GAAgBG,cAAhB,CAA+BX,QAAQ,CAACQ,IAAT,CAAcI,IAAd,CAAmBC,WAAnB,CAA+BC,KAA9D;AACAd,IAAAA,QAAQ,CAACQ,IAAT,GAAgBO,eAAhB,CAAgCR,QAAhC,EACCS,IADD,CACOC,MAAD,IAAY;AACd,WAAKd,KAAL,CAAWe,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAE,aADU;AAEhBC,QAAAA,KAAK,EAAE;AACHd,UAAAA,KAAK,EAAE,IADJ;AAEHe,UAAAA,QAAQ,EAAEJ,MAAM,CAACK,IAAP,CAAYC,WAFnB;AAGHC,UAAAA,KAAK,EAAEP,MAAM,CAACK,IAAP,CAAYE,KAHhB;AAIHC,UAAAA,IAAI,EAAC,KAAKtB,KAAL,CAAWsB,IAJb;AAKHC,UAAAA,KAAK,EAAC,KAAKvB,KAAL,CAAWuB;AALd;AAFS,OAApB;AAUA,WAAKvB,KAAL,CAAWwB,SAAX;AACH,KAbD;AAcH;;AAEDC,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA9B,IAAAA,QAAQ,CAACQ,IAAT,GAAgBuB,OAAhB;AACA,SAAK5B,KAAL,CAAWe,QAAX,CAAoB;AAChBC,MAAAA,IAAI,EAAE,aADU;AAEhBC,MAAAA,KAAK,EAAE;AACHd,QAAAA,KAAK,EAAE,KADJ;AAEHe,QAAAA,QAAQ,EAAE,eAFP;AAGHG,QAAAA,KAAK,EAAE,EAHJ;AAIHC,QAAAA,IAAI,EAAE,EAJH;AAKHC,QAAAA,KAAK,EAAE;AALJ;AAFS,KAApB;AAUA,SAAKvB,KAAL,CAAW6B,UAAX;AACH,GAzC2B,CA2C5B;;;AACA5B,EAAAA,WAAW,GAAE;AACT,QAAI,KAAKD,KAAL,CAAWG,KAAX,IAAoB,KAAxB,EAA8B;AAC1B,WAAKA,KAAL;AACH,KAFD,MAEO;AACH,WAAKsB,MAAL;AACH;AACJ;;AAEDK,EAAAA,MAAM,GAAE;AAEJjC,IAAAA,QAAQ,CAACQ,IAAT,GAAgB0B,kBAAhB,CAAoCZ,IAAD,IAAU;AACzC,UAAIA,IAAJ,EAAU;AACR;AACA,aAAKa,SAAL,GAAiBb,IAAI,CAACC,WAAtB;AACD,OAHD,MAGO,CACL;AACD;AACF,KAPH;AASA,WACI;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,QAAhB;AACA,MAAA,OAAO,EAAE,KAAKnB,WADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEc,KAAKD,KAAL,CAAWkB,QAFzB,CADJ,CADJ;AAQH;;AAvE2B;;AA0EhCpB,OAAO,GAAGF,OAAO,CAAEqC,KAAD,IAAWA,KAAZ,CAAP,CAA0BnC,OAA1B,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\n\nclass Account extends Component {\n\n    constructor(props){\n        super(props);\n        this.login_check = this.login_check.bind(this);\n    }\n\n    login(){\n        let provider = new firebase.auth.GoogleAuthProvider();\n        let self = this;\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n        firebase.auth().signInWithPopup(provider)\n        .then((result) => {\n            this.props.dispatch({\n                type: 'UPDATE_USER',\n                value: {\n                    login: true,\n                    username: result.user.displayName,\n                    email: result.user.email,\n                    data:this.props.data,\n                    items:this.props.items\n                }\n            });\n            this.props.onLogined();\n        });\n    }\n\n    logout(){\n        console.log(\"logout\");\n        firebase.auth().signOut();\n        this.props.dispatch({\n            type: 'UPDATE_USER',\n            value: {\n                login: false,\n                username: '(click here!)',\n                email: '',\n                data: [],\n                items: []\n            }\n        });\n        this.props.onLogouted();\n    }\n\n    // check if user is logged in or logged out\n    login_check(){\n        if (this.props.login == false){\n            this.login();\n        } else {\n            this.logout();\n        }\n    }\n\n    render(){\n\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n              // User is signed in.\n              this.username_ = user.displayName;\n            } else {\n              // No user is signed in.\n            }\n          });\n\n        return (\n            <p className=\"login\">\n                <span className=\"acount\"\n                onClick={this.login_check}>\n                    LOGINED: {this.props.username}\n                </span>\n            </p>\n        );\n    }\n}\n\nAccount = connect((state) => state)(Account);\nexport default Account;"]},"metadata":{},"sourceType":"module"}