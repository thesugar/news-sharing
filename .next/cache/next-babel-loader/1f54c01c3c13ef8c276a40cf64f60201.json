{"ast":null,"code":"var _jsxFileName = \"/Users/thesugar/news-sharing/components/SelectWho.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\n\nclass SelectWho extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getUserList\", (self = this) => {\n      let db = firebase.firestore(); // firestore のオブジェクト取得\n\n      db.collection('news-user').get().then(function (querySnapshot) {\n        let userList = [];\n        querySnapshot.forEach(doc => {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          userList.push(__jsx(\"li\", {\n            key: doc.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, __jsx(\"input\", {\n            type: \"checkbox\",\n            onChange: e => this.onChecked(doc.data().userid, e),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, doc.data().userid)));\n        });\n        console.log('userlistがとれてるかてすと');\n        console.log(userList); //self.setState({userList: userList});\n      });\n    });\n\n    _defineProperty(this, \"doAction\", (article, userid, e) => {\n      console.log('doActionの中');\n      console.log('userid is');\n      console.log(userid);\n      let db = firebase.firestore(); // Firestore の登録処理\n\n      db.collection('share').add({\n        title: article.title,\n        description: article.description,\n        image: article.urlToImage,\n        url: article.url,\n        sharedFrom: userid,\n        sharedTo: this.state.userList\n      }).then(doc => {\n        console.log(`共有しました`);\n      }).catch(error => {\n        console.log(`共有に失敗しました。リトライしてください。`);\n      });\n      this.setState({\n        title: '',\n        description: '',\n        image: '',\n        url: ''\n      });\n    });\n\n    if (this.props.login == false) {\n      Router.push('/');\n    }\n\n    this.state = {\n      userList: []\n    };\n    this.logined = this.logined.bind(this);\n    this.onChangeTitle = this.onChecked.bind(this);\n    this.doAction = this.doAction.bind(this);\n  } // login, logout 処理\n\n\n  logined() {\n    console.log('logined.');\n  }\n\n  logouted() {\n    Router.push('/');\n  }\n\n  onChecked(userid, e) {\n    const currentSelectedUsers = this.state.currentSelectedUsers ? this.state.currentSelectedUsers : [];\n    e.target.checked ? this.setState({\n      currentSelectedUsers: currentSelectedUsers.push(userid)\n    }) : this.setState({\n      currentSelectedUsers: currentSelectedUsers.filter(elem => elem !== userid)\n    });\n  }\n\n  render() {\n    const article = this.props.article;\n    const userid = this.props.userid;\n    (this.state.userList === [] || this.state.userList === undefined) && this.getUserList();\n    const userList = this.state.userList;\n    console.log('renderの中でuserListがとれてるか');\n    console.log(userList);\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, userList), __jsx(\"button\", {\n      onClick: e => this.doAction(article, userid, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"\\u78BA\\u5B9A\")) // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n    ;\n  }\n\n}\n\nSelectWho = connect(state => state)(SelectWho);\nexport default SelectWho;","map":{"version":3,"sources":["/Users/thesugar/news-sharing/components/SelectWho.js"],"names":["React","Component","connect","Router","firebase","SelectWho","constructor","props","self","db","firestore","collection","get","then","querySnapshot","userList","forEach","doc","console","log","id","data","push","e","onChecked","userid","article","add","title","description","image","urlToImage","url","sharedFrom","sharedTo","state","catch","error","setState","login","logined","bind","onChangeTitle","doAction","logouted","currentSelectedUsers","target","checked","filter","elem","render","undefined","getUserList"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\n\nclass SelectWho extends Component {\n\n    constructor(props){\n        super(props);\n        if (this.props.login == false) {\n            Router.push('/');\n        }\n        this.state = {\n            userList : []\n        }\n\n        this.logined = this.logined.bind(this);\n        this.onChangeTitle = this.onChecked.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        console.log('logined.');\n    }\n\n    logouted(){\n        Router.push('/');\n    }\n\n    onChecked(userid, e) {\n        const currentSelectedUsers = this.state.currentSelectedUsers ? this.state.currentSelectedUsers : [];\n\n        e.target.checked ? \n        this.setState({currentSelectedUsers : currentSelectedUsers.push(userid)})\n        :\n        this.setState({currentSelectedUsers : currentSelectedUsers.filter(elem => elem !== userid)})\n    }\n\n    getUserList = (self = this) => {\n        let db = firebase.firestore(); // firestore のオブジェクト取得\n    \n        db.collection('news-user')\n        .get()\n        .then(function(querySnapshot) {\n            let userList = [];\n            querySnapshot.forEach((doc) => {\n            // doc.data() is never undefined for query doc snapshots\n            console.log(doc.id, \" => \", doc.data());\n            userList.push(<li key={doc.id}><input type=\"checkbox\" onChange={(e) => this.onChecked(doc.data().userid, e)}>{doc.data().userid}</input></li>);\n            })\n            console.log('userlistがとれてるかてすと')\n            console.log(userList);\n            //self.setState({userList: userList});\n        });\n    }\n\n    // データの登録処理\n    doAction = (article, userid, e) => {    \n        console.log('doActionの中');\n        console.log('userid is');\n        console.log(userid);\n        let db = firebase.firestore();\n        // Firestore の登録処理\n\n        db.collection('share').add({\n            title: article.title,\n            description: article.description,\n            image: article.urlToImage,\n            url: article.url,\n            sharedFrom: userid,\n            sharedTo : this.state.userList\n        })\n        .then((doc) => {\n            console.log(`共有しました`);\n        })\n        .catch((error) => {\n            console.log(`共有に失敗しました。リトライしてください。`);\n        });\n\n        this.setState({\n            title: '',\n            description: '',\n            image: '',\n            url: '',\n        })\n    }\n\n    render(){\n        const article = this.props.article;\n        const userid = this.props.userid;\n        (this.state.userList === [] || this.state.userList === undefined) && this.getUserList();\n        const userList = this.state.userList;\n        console.log('renderの中でuserListがとれてるか')\n        console.log(userList);\n        return (\n            <div>\n                <ul>{userList}</ul>\n                <button onClick={(e) => this.doAction(article, userid, e)}>確定</button>\n            </div>\n            // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n        );\n    }\n}\n\nSelectWho = connect((state) => state) (SelectWho);\nexport default SelectWho;"]},"metadata":{},"sourceType":"module"}