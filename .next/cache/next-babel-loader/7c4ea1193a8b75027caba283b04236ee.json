{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/RyoheiSato/news-sharing/components/SelectWho.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\n\nvar SelectWho =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SelectWho, _Component);\n\n  function SelectWho(props) {\n    var _this;\n\n    _classCallCheck(this, SelectWho);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectWho).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getUserList\", function () {\n      var self = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _assertThisInitialized(_this);\n      console.log('now inside getUserList function');\n      var db = firebase.firestore(); // firestore のオブジェクト取得\n\n      db.collection('news-user').get().then(function (querySnapshot) {\n        var userList = [];\n        querySnapshot.forEach(function (doc) {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          userList.push(__jsx(\"li\", {\n            key: doc.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, __jsx(\"input\", {\n            type: \"checkbox\",\n            onChange: function onChange(e) {\n              return self.onChecked(doc.data().userid, e);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }), doc.data().userid));\n        });\n        self.setState({\n          userList: userList\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"doAction\", function (article, userid, e) {\n      console.log('doActionの中');\n      console.log('userid is');\n      console.log(userid);\n      var db = firebase.firestore(); // Firestore の登録処理\n\n      db.collection('share').add({\n        title: article.title,\n        description: article.description,\n        image: article.urlToImage,\n        url: article.url,\n        sharedFrom: userid,\n        sharedTo: _this.state.currentSelectedUsers\n      }).then(function (doc) {\n        console.log(\"\\u5171\\u6709\\u3057\\u307E\\u3057\\u305F\");\n      })[\"catch\"](function (error) {\n        console.log(\"\\u5171\\u6709\\u306B\\u5931\\u6557\\u3057\\u307E\\u3057\\u305F\\u3002\\u30EA\\u30C8\\u30E9\\u30A4\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\");\n      });\n\n      _this.setState({\n        title: '',\n        description: '',\n        image: '',\n        url: ''\n      });\n    });\n\n    if (_this.props.login == false) {\n      Router.push('/');\n    }\n\n    _this.state = {\n      userList: []\n    };\n    _this.logined = _this.logined.bind(_assertThisInitialized(_this));\n    _this.onChecked = _this.onChecked.bind(_assertThisInitialized(_this));\n    _this.doAction = _this.doAction.bind(_assertThisInitialized(_this));\n    return _this;\n  } // login, logout 処理\n\n\n  _createClass(SelectWho, [{\n    key: \"logined\",\n    value: function logined() {\n      console.log('logined.');\n    }\n  }, {\n    key: \"logouted\",\n    value: function logouted() {\n      Router.push('/');\n    }\n  }, {\n    key: \"onChecked\",\n    value: function onChecked(userid, e) {\n      var currentSelectedUsers = this.state.currentSelectedUsers ? this.state.currentSelectedUsers : [];\n      currentSelectedUsers.push(userid); // はまりポイント：\n      // 以下で {currentSelectedUsers : currentSelectedUsers.push(userid)}としたら\n      // currentSelectedUsers に 1 という数字が入って配列じゃないためpushできないという現象\n      // Array.push は 戻り値として length を返すため\n\n      e.target.checked ? this.setState({\n        currentSelectedUsers: currentSelectedUsers\n      }) : this.setState({\n        currentSelectedUsers: currentSelectedUsers.filter(function (elem) {\n          return elem !== userid;\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var article = this.props.article;\n      var userid = this.props.userid;\n      (this.state.userList.length === 0 || this.state.userList === undefined) && this.getUserList();\n      var userList = this.state.userList;\n      console.log('renderの中でuserListがとれてるか');\n      console.log(userList);\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, userList), __jsx(\"button\", {\n        onClick: function onClick(e) {\n          return _this2.doAction(article, userid, e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"\\u78BA\\u5B9A\")) // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n      ;\n    }\n  }]);\n\n  return SelectWho;\n}(Component);\n\nSelectWho = connect(function (state) {\n  return state;\n})(SelectWho);\nexport default SelectWho;","map":{"version":3,"sources":["/Users/RyoheiSato/news-sharing/components/SelectWho.js"],"names":["React","Component","connect","Router","firebase","SelectWho","props","self","console","log","db","firestore","collection","get","then","querySnapshot","userList","forEach","doc","id","data","push","e","onChecked","userid","setState","article","add","title","description","image","urlToImage","url","sharedFrom","sharedTo","state","currentSelectedUsers","error","login","logined","bind","doAction","target","checked","filter","elem","length","undefined","getUserList"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\n\nclass SelectWho extends Component {\n\n    constructor(props){\n        super(props);\n        if (this.props.login == false) {\n            Router.push('/');\n        }\n        this.state = {\n            userList : []\n        }\n\n        this.logined = this.logined.bind(this);\n        this.onChecked = this.onChecked.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        console.log('logined.');\n    }\n\n    logouted(){\n        Router.push('/');\n    }\n\n    onChecked(userid, e) {\n        const currentSelectedUsers = this.state.currentSelectedUsers ? this.state.currentSelectedUsers : [];\n        currentSelectedUsers.push(userid)\n        // はまりポイント：\n        // 以下で {currentSelectedUsers : currentSelectedUsers.push(userid)}としたら\n        // currentSelectedUsers に 1 という数字が入って配列じゃないためpushできないという現象\n        // Array.push は 戻り値として length を返すため\n        e.target.checked ? \n        this.setState({currentSelectedUsers : currentSelectedUsers})\n        :\n        this.setState({currentSelectedUsers : currentSelectedUsers.filter(elem => elem !== userid)})\n    }\n\n    getUserList = (self = this) => {\n        console.log('now inside getUserList function');\n        let db = firebase.firestore(); // firestore のオブジェクト取得\n    \n        db.collection('news-user')\n        .get()\n        .then(function(querySnapshot) {\n            let userList = [];\n            querySnapshot.forEach((doc) => {\n            // doc.data() is never undefined for query doc snapshots\n            console.log(doc.id, \" => \", doc.data());\n            userList.push(<li key={doc.id}><input type=\"checkbox\" onChange={(e) => self.onChecked(doc.data().userid, e)} />{doc.data().userid}</li>);\n            })\n            self.setState({userList: userList});\n        });\n    }\n\n    // データの登録処理\n    doAction = (article, userid, e) => {    \n        console.log('doActionの中');\n        console.log('userid is');\n        console.log(userid);\n        let db = firebase.firestore();\n        // Firestore の登録処理\n\n        db.collection('share').add({\n            title: article.title,\n            description: article.description,\n            image: article.urlToImage,\n            url: article.url,\n            sharedFrom: userid,\n            sharedTo : this.state.currentSelectedUsers\n        })\n        .then((doc) => {\n            console.log(`共有しました`);\n        })\n        .catch((error) => {\n            console.log(`共有に失敗しました。リトライしてください。`);\n        });\n\n        this.setState({\n            title: '',\n            description: '',\n            image: '',\n            url: '',\n        })\n    }\n\n    render(){\n        const article = this.props.article;\n        const userid = this.props.userid;\n        (this.state.userList.length === 0 || this.state.userList === undefined) && this.getUserList();\n        const userList = this.state.userList;\n        console.log('renderの中でuserListがとれてるか')\n        console.log(userList);\n        return (\n            <div>\n                <ul>{userList}</ul>\n                <button onClick={(e) => this.doAction(article, userid, e)}>確定</button>\n            </div>\n            // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n        );\n    }\n}\n\nSelectWho = connect((state) => state) (SelectWho);\nexport default SelectWho;"]},"metadata":{},"sourceType":"module"}