{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thesugar/news-sharing/components/ShareNews.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\n\nvar ShareNews =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShareNews, _Component);\n\n  function ShareNews(props) {\n    var _this;\n\n    _classCallCheck(this, ShareNews);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShareNews).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"doAction\", function (article, e) {\n      var db = firebase.firestore(); // Firestore の登録処理\n\n      db.collection('share').add({\n        title: article.title,\n        description: article.description,\n        image: article.image,\n        url: article.url //sharedFrom: firebase.auth().currentUser.uid,\n        //sharedTo :\n\n      }).then(function (doc) {\n        console.log(\"\\u5171\\u6709\\u3057\\u307E\\u3057\\u305F\");\n      })[\"catch\"](function (error) {\n        console.log(\"\\u5171\\u6709\\u306B\\u5931\\u6557\\u3057\\u307E\\u3057\\u305F\\u3002\\u30EA\\u30C8\\u30E9\\u30A4\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\");\n      });\n\n      _this.setState({\n        title: '',\n        description: '',\n        image: '',\n        url: ''\n      });\n    });\n\n    if (_this.props.login == false) {\n      Router.push('/address');\n    }\n\n    _this.state = {\n      title: '',\n      description: '',\n      url: '',\n      image: ''\n    };\n    _this.logined = _this.logined.bind(_assertThisInitialized(_this));\n    _this.onChangeTitle = _this.onChangeTitle.bind(_assertThisInitialized(_this));\n    _this.onChangeDetail = _this.onChangeDetail.bind(_assertThisInitialized(_this));\n    _this.onChangeDeadline = _this.onChangeDeadline.bind(_assertThisInitialized(_this));\n    _this.onChangeConcerns = _this.onChangeConcerns.bind(_assertThisInitialized(_this));\n    _this.doAction = _this.doAction.bind(_assertThisInitialized(_this));\n    return _this;\n  } // login, logout 処理\n\n\n  _createClass(ShareNews, [{\n    key: \"logined\",\n    value: function logined() {\n      console.log('logined.');\n    }\n  }, {\n    key: \"logouted\",\n    value: function logouted() {\n      Router.push('/');\n    } // フィールド入力処理\n\n  }, {\n    key: \"onChangeTitle\",\n    value: function onChangeTitle(e) {\n      this.setState({\n        title: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeDetail\",\n    value: function onChangeDetail(e) {\n      this.setState({\n        detail: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeDeadline\",\n    value: function onChangeDeadline(e) {\n      this.setState({\n        deadline: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeConcerns\",\n    value: function onChangeConcerns(e) {\n      this.setState({\n        concerns: e.target.value\n      });\n    } // データの登録処理\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var article = this.props.article;\n      console.log('article inside the render');\n      console.log(article);\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        onClick: function onClick(e) {\n          return _this2.doAction(article, e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"\\u5171\\u6709\\u3059\\u308B\")) // article情報は親ページからpropsで受け取ればいい?\n      // 受け取ったarticleをいちいちsetStateとかしないとだめ？\n      // doActionにarticleを引数としてわたせる？\n      // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n      ;\n    }\n  }]);\n\n  return ShareNews;\n}(Component);\n\nShareNews = connect(function (state) {\n  return state;\n})(ShareNews);\nexport default ShareNews;","map":{"version":3,"sources":["/Users/thesugar/news-sharing/components/ShareNews.js"],"names":["React","Component","connect","Router","firebase","ShareNews","props","article","e","db","firestore","collection","add","title","description","image","url","then","doc","console","log","error","setState","login","push","state","logined","bind","onChangeTitle","onChangeDetail","onChangeDeadline","onChangeConcerns","doAction","target","value","detail","deadline","concerns"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\n\nclass ShareNews extends Component {\n\n    constructor(props){\n        super(props);\n        if (this.props.login == false) {\n            Router.push('/address');\n        }\n        this.state = {\n            title: '',\n            description: '',\n            url: '',\n            image: '',\n        }\n        this.logined = this.logined.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeDetail = this.onChangeDetail.bind(this);\n        this.onChangeDeadline = this.onChangeDeadline.bind(this);\n        this.onChangeConcerns = this.onChangeConcerns.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        console.log('logined.');\n    }\n\n    logouted(){\n        Router.push('/');\n    }\n\n    // フィールド入力処理\n    onChangeTitle(e) {\n        this.setState({title: e.target.value});\n    }\n\n    onChangeDetail(e){\n        this.setState({detail: e.target.value});\n    }\n\n    onChangeDeadline(e){\n        this.setState({deadline: e.target.value});\n    }\n\n    onChangeConcerns(e){\n        this.setState({concerns: e.target.value});\n    }\n\n    // データの登録処理\n    doAction = (article, e) => {    \n        \n        let db = firebase.firestore();\n        // Firestore の登録処理\n\n        db.collection('share').add({\n            title: article.title,\n            description: article.description,\n            image: article.image,\n            url: article.url,\n            //sharedFrom: firebase.auth().currentUser.uid,\n            //sharedTo :\n        })\n        .then((doc) => {\n            console.log(`共有しました`);\n        })\n        .catch((error) => {\n            console.log(`共有に失敗しました。リトライしてください。`);\n        });\n\n        this.setState({\n            title: '',\n            description: '',\n            image: '',\n            url: '',\n        })\n    }\n\n    render(){\n        const article = this.props.article;\n        console.log('article inside the render')\n        console.log(article);\n        return (\n            <div>\n                <button onClick={(e) => this.doAction(article, e)}>共有する</button>\n            </div>\n            // article情報は親ページからpropsで受け取ればいい?\n            // 受け取ったarticleをいちいちsetStateとかしないとだめ？\n            // doActionにarticleを引数としてわたせる？\n            // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n        );\n    }\n}\n\nShareNews = connect((state) => state) (ShareNews);\nexport default ShareNews;"]},"metadata":{},"sourceType":"module"}