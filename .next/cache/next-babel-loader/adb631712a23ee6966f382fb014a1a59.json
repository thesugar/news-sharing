{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thesugar/news-sharing/components/Account.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\n\nvar Account =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Account, _Component);\n\n  function Account(props) {\n    var _this;\n\n    _classCallCheck(this, Account);\n\n    console.log('Account.jsのconstructor');\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Account).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    _this.login_check = _this.login_check.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Account, [{\n    key: \"login\",\n    value: function login() {\n      var _this2 = this;\n\n      console.log('Account.jsのlogin()');\n      var provider = new firebase.auth.GoogleAuthProvider();\n      var self = this;\n      var db = firebase.firestore();\n      firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n      firebase.auth().signInWithPopup(provider).then(function (result) {\n        db.collection(\"news-user\").where('email', '==', result.user.email).then(function (docs) {\n          // success\n          console.log(doc.data());\n\n          _this2.props.dispatch({\n            type: 'UPDATE_USER',\n            value: {\n              login: true,\n              username: result.user.displayName,\n              email: result.user.email,\n              articles: _this2.props.articles\n            }\n          });\n        })[\"catch\"](function (error) {\n          console.log('error');\n        });\n\n        _this2.props.onLogined();\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      console.log(\"logout\");\n      firebase.auth().signOut();\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: false,\n          username: '(click here!)',\n          email: '',\n          articles: this.props.articles\n        }\n      });\n      this.props.onLogouted();\n    } // check if user is logged in or logged out\n\n  }, {\n    key: \"login_check\",\n    value: function login_check() {\n      console.log('Account.jsのlogin_check()');\n\n      if (this.props.login === undefined || this.props.login == false) {\n        this.login();\n      } else {\n        this.logout();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log('Account.jsのrender()');\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          // User is signed in.\n          _this3.username_ = user.displayName;\n        } else {// No user is signed in.\n        }\n      });\n      return __jsx(\"p\", {\n        className: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"acount\",\n        onClick: this.login_check,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"LOGINED: \", this.props.username));\n    }\n  }]);\n\n  return Account;\n}(Component);\n\nAccount = connect(function (state) {\n  return state;\n})(Account);\nexport default Account;","map":{"version":3,"sources":["/Users/thesugar/news-sharing/components/Account.js"],"names":["React","Component","connect","firebase","Account","props","console","log","fontSize","padding","login_check","bind","provider","auth","GoogleAuthProvider","self","db","firestore","setPersistence","Auth","Persistence","LOCAL","signInWithPopup","then","result","collection","where","user","email","docs","doc","data","dispatch","type","value","login","username","displayName","articles","error","onLogined","signOut","onLogouted","undefined","logout","onAuthStateChanged","username_","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\n\nclass Account extends Component {\n    style = {\n        fontSize: \"12pt\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        console.log('Account.jsのconstructor')\n        super(props);\n        this.login_check = this.login_check.bind(this);\n    }\n\n    login(){\n        console.log('Account.jsのlogin()')\n        let provider = new firebase.auth.GoogleAuthProvider();\n        let self = this;\n        let db = firebase.firestore();\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n        firebase.auth().signInWithPopup(provider)\n        .then((result) => {\n\n            db.collection(\"news-user\")\n            .where('email', '==', result.user.email).then((docs) => {\n                // success\n                console.log(doc.data())\n                this.props.dispatch({\n                    type: 'UPDATE_USER',\n                    value: {\n                        login: true,\n                        username: result.user.displayName,\n                        email: result.user.email,\n                        articles : this.props.articles\n                    }\n                });\n            }).catch(error => {\n                console.log('error');\n            })\n            this.props.onLogined();\n        });\n    }\n\n    logout(){\n        console.log(\"logout\");\n        firebase.auth().signOut();\n        this.props.dispatch({\n            type: 'UPDATE_USER',\n            value: {\n                login: false,\n                username: '(click here!)',\n                email: '',\n                articles: this.props.articles\n            }\n        });\n        this.props.onLogouted();\n    }\n\n    // check if user is logged in or logged out\n    login_check(){\n        console.log('Account.jsのlogin_check()');\n        if (this.props.login === undefined || this.props.login == false){\n            this.login();\n        } else {\n            this.logout();\n        }\n    }\n\n    render(){\n        console.log('Account.jsのrender()');\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n              // User is signed in.\n              this.username_ = user.displayName;\n            } else {\n              // No user is signed in.\n            }\n          });\n\n        return (\n            <p className=\"login\">\n                <span className=\"acount\"\n                onClick={this.login_check}>\n                    LOGINED: {this.props.username}\n                </span>\n            </p>\n        );\n    }\n}\n\nAccount = connect((state) => state)(Account);\nexport default Account;"]},"metadata":{},"sourceType":"module"}