{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/RyoheiSato/news-sharing/components/SelectWho.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport SimpleModal from '../components/Modal';\n\nvar SelectWho =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SelectWho, _Component);\n\n  function SelectWho(props) {\n    var _this;\n\n    _classCallCheck(this, SelectWho);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectWho).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getUserList\", function () {\n      var self = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _assertThisInitialized(_this);\n      console.log('now inside getUserList function');\n      var db = firebase.firestore(); // firestore のオブジェクト取得\n\n      db.collection('news-user').get().then(function (querySnapshot) {\n        var userList = [];\n        querySnapshot.forEach(function (doc) {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          userList.push(__jsx(\"li\", {\n            key: doc.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, __jsx(\"input\", {\n            type: \"checkbox\",\n            onChange: function onChange(e) {\n              return self.onChecked(doc.data().userid, e);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }), doc.data().userid));\n        });\n        self.setState({\n          userList: userList\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeText\", function (e) {\n      _this.setState({\n        textAreaValue: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"doAction\", function (article, userid, e) {\n      console.log('doActionの中');\n      console.log('userid is');\n      console.log(userid);\n      var db = firebase.firestore(); // Firestore の登録処理\n\n      if (_this.state.currentSelectedUsers.length === 0 || _this.state.currentSelectedUsers === null || _this.state.currentSelectedUsers === undefined) {\n        _this.setState({\n          message: '共有する相手を1人以上選択してください'\n        });\n\n        return null;\n      }\n\n      db.collection('share').add({\n        title: article.title,\n        description: article.description,\n        image: article.urlToImage,\n        url: article.url,\n        sharedFrom: userid,\n        sharedTo: _this.state.currentSelectedUsers,\n        comment: _this.state.textAreaValue // コメントへの返信を実装するときにはcommentを配列にする（か都度フィールドを追加する？），コメントへのいいねを実装するならネストJSONにする?\n\n      }).then(function (doc) {\n        console.log(\"\\u5171\\u6709\\u3057\\u307E\\u3057\\u305F\");\n\n        _this.setState({\n          message: '共有しました！',\n          textAreaValue: '',\n          currentSelectedUsers: []\n        });\n\n        setTimeout(function () {\n          _this.setState({\n            message: null\n          });\n        }, 2000);\n      })[\"catch\"](function (error) {\n        console.log(\"\\u5171\\u6709\\u306B\\u5931\\u6557\\u3057\\u307E\\u3057\\u305F\\u3002\\u30EA\\u30C8\\u30E9\\u30A4\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\");\n\n        _this.setState({\n          message: '共有に失敗しました。リトライしてください。',\n          textAreaValue: '',\n          currentSelectedUsers: []\n        });\n\n        setTimeout(function () {\n          _this.setState({\n            message: null\n          });\n        }, 2000);\n      });\n\n      _this.setState({\n        title: '',\n        description: '',\n        image: '',\n        url: '',\n        sharedFrom: '',\n        sharedTo: '',\n        comment: ''\n      });\n    });\n\n    if (_this.props.login == false) {\n      Router.push('/');\n    }\n\n    _this.state = {\n      userList: [],\n      textAreaValue: '',\n      message: null\n    };\n    _this.logined = _this.logined.bind(_assertThisInitialized(_this));\n    _this.onChecked = _this.onChecked.bind(_assertThisInitialized(_this));\n    _this.doAction = _this.doAction.bind(_assertThisInitialized(_this));\n    _this.onChangeText = _this.onChangeText.bind(_assertThisInitialized(_this));\n    return _this;\n  } // login, logout 処理\n\n\n  _createClass(SelectWho, [{\n    key: \"logined\",\n    value: function logined() {\n      console.log('logined.');\n    }\n  }, {\n    key: \"logouted\",\n    value: function logouted() {\n      Router.push('/');\n    }\n  }, {\n    key: \"onChecked\",\n    value: function onChecked(userid, e) {\n      var currentSelectedUsers = this.state.currentSelectedUsers ? this.state.currentSelectedUsers : [];\n      currentSelectedUsers.push(userid); // はまりポイント：\n      // 以下で {currentSelectedUsers : currentSelectedUsers.push(userid)}としたら\n      // currentSelectedUsers に 1 という数字が入って配列じゃないためpushできないという現象\n      // Array.push は 戻り値として length を返すため\n\n      e.target.checked ? this.setState({\n        currentSelectedUsers: currentSelectedUsers\n      }) : this.setState({\n        currentSelectedUsers: currentSelectedUsers.filter(function (elem) {\n          return elem !== userid;\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var article = this.props.article;\n      var userid = this.props.userid;\n      (this.state.userList.length === 0 || this.state.userList === undefined) && this.getUserList();\n      var userList = this.state.userList;\n      console.log('renderの中でuserListがとれてるか');\n      console.log(userList);\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, userList), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, __jsx(\"textarea\", {\n        value: this.state.textAreaValue,\n        onChange: this.onChangeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), __jsx(\"button\", {\n        onClick: function onClick(e) {\n          return _this2.doAction(article, userid, e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"\\u78BA\\u5B9A\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this.state.message)) // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n      ;\n    }\n  }]);\n\n  return SelectWho;\n}(Component);\n\nSelectWho = connect(function (state) {\n  return state;\n})(SelectWho);\nexport default SelectWho;","map":{"version":3,"sources":["/Users/RyoheiSato/news-sharing/components/SelectWho.js"],"names":["React","Component","connect","Router","firebase","SimpleModal","SelectWho","props","self","console","log","db","firestore","collection","get","then","querySnapshot","userList","forEach","doc","id","data","push","e","onChecked","userid","setState","textAreaValue","target","value","article","state","currentSelectedUsers","length","undefined","message","add","title","description","image","urlToImage","url","sharedFrom","sharedTo","comment","setTimeout","error","login","logined","bind","doAction","onChangeText","checked","filter","elem","getUserList"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport SimpleModal from '../components/Modal'\n\nclass SelectWho extends Component {\n\n    constructor(props){\n        super(props);\n        if (this.props.login == false) {\n            Router.push('/');\n        }\n        this.state = {\n            userList : [],\n            textAreaValue : '',\n            message : null\n        }\n\n        this.logined = this.logined.bind(this);\n        this.onChecked = this.onChecked.bind(this);\n        this.doAction = this.doAction.bind(this);\n        this.onChangeText = this.onChangeText.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        console.log('logined.');\n    }\n\n    logouted(){\n        Router.push('/');\n    }\n\n    onChecked(userid, e) {\n        const currentSelectedUsers = this.state.currentSelectedUsers ? this.state.currentSelectedUsers : [];\n        currentSelectedUsers.push(userid)\n        // はまりポイント：\n        // 以下で {currentSelectedUsers : currentSelectedUsers.push(userid)}としたら\n        // currentSelectedUsers に 1 という数字が入って配列じゃないためpushできないという現象\n        // Array.push は 戻り値として length を返すため\n        e.target.checked ? \n        this.setState({currentSelectedUsers : currentSelectedUsers})\n        :\n        this.setState({currentSelectedUsers : currentSelectedUsers.filter(elem => elem !== userid)})\n    }\n\n    getUserList = (self = this) => {\n        console.log('now inside getUserList function');\n        let db = firebase.firestore(); // firestore のオブジェクト取得\n    \n        db.collection('news-user')\n        .get()\n        .then(function(querySnapshot) {\n            let userList = [];\n            querySnapshot.forEach((doc) => {\n            // doc.data() is never undefined for query doc snapshots\n            console.log(doc.id, \" => \", doc.data());\n            userList.push(<li key={doc.id}><input type=\"checkbox\" onChange={(e) => self.onChecked(doc.data().userid, e)} />{doc.data().userid}</li>);\n            })\n            self.setState({userList: userList});\n        });\n    }\n\n    onChangeText = e => {\n        this.setState({textAreaValue: e.target.value});\n    }\n\n    // データの登録処理\n    doAction = (article, userid, e) => {    \n        console.log('doActionの中');\n        console.log('userid is');\n        console.log(userid);\n        let db = firebase.firestore();\n        // Firestore の登録処理\n\n        if (this.state.currentSelectedUsers.length === 0 || this.state.currentSelectedUsers === null || this.state.currentSelectedUsers === undefined){\n            this.setState({message : '共有する相手を1人以上選択してください'});\n            return null;\n        }\n\n        db.collection('share').add({\n            title: article.title,\n            description: article.description,\n            image: article.urlToImage,\n            url: article.url,\n            sharedFrom: userid,\n            sharedTo : this.state.currentSelectedUsers,\n            comment : this.state.textAreaValue // コメントへの返信を実装するときにはcommentを配列にする（か都度フィールドを追加する？），コメントへのいいねを実装するならネストJSONにする?\n        })\n        .then((doc) => {\n            console.log(`共有しました`);\n            this.setState({message: '共有しました！', textAreaValue: '', currentSelectedUsers: []});\n            setTimeout(() => {this.setState({message: null})}, 2000);\n        })\n        .catch((error) => {\n            console.log(`共有に失敗しました。リトライしてください。`);\n            this.setState({message: '共有に失敗しました。リトライしてください。', textAreaValue: '', currentSelectedUsers:[]});\n            setTimeout(() => {this.setState({message: null})}, 2000);\n        });\n\n        this.setState({\n            title: '',\n            description: '',\n            image: '',\n            url: '',\n            sharedFrom : '',\n            sharedTo : '',\n            comment : ''\n        })\n    }\n\n    render(){\n        const article = this.props.article;\n        const userid = this.props.userid;\n        (this.state.userList.length === 0 || this.state.userList === undefined) && this.getUserList();\n        const userList = this.state.userList;\n        console.log('renderの中でuserListがとれてるか')\n        console.log(userList);\n        return (\n            <div>\n                <ul>{userList}</ul>\n                <div>\n                <textarea value={this.state.textAreaValue} onChange={this.onChangeText} />\n                </div>\n                <button onClick={(e) => this.doAction(article, userid, e)}>確定</button>\n                <p>{this.state.message}</p>\n            </div>\n            // 共有先はここでモーダル（ポータル）を表示して選べるようにする\n        );\n    }\n}\n\nSelectWho = connect((state) => state) (SelectWho);\nexport default SelectWho;"]},"metadata":{},"sourceType":"module"}