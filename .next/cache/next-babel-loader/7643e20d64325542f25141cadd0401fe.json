{"ast":null,"code":"var _jsxFileName = \"/Users/thesugar/news-sharing/components/NewsList.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Router from 'next/router';\nimport Link from 'next/link';\nexport default class NewsList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      articles: [],\n      refreshing: false\n    });\n\n    _defineProperty(this, \"getNews\", async () => {\n      this.setState({\n        refreshing: true\n      }); // fill your API key!\n\n      const url = \"https://newsapi.org/v2/everything?q=mufg&from=2019-12-25&to=2020-01-24&sortBy=popularity&apiKey=30d451b495234aae8b35d83d68082817\";\n\n      try {\n        const result = await fetch(url);\n        const json = await result.json(); // console.log(json);\n\n        this.setState({\n          articles: json.articles,\n          refreshing: false\n        });\n      } catch (e) {\n        this.setState({\n          refreshing: false\n        });\n        console.log(e);\n      }\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.getNews();\n    });\n  }\n\n  render() {\n    const itemList = [];\n    this.state.articles.map((article, index) => {\n      itemList.push(__jsx(\"li\", {\n        key: index.toString,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/p/[id]\",\n        as: `/p/${index}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, article['title'])), __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: article['urlToImage'],\n        width: \"100\",\n        height: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, article['description']), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, article['content']))));\n    });\n    console.log(this.state.articles);\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, itemList));\n  }\n\n}","map":{"version":3,"sources":["/Users/thesugar/news-sharing/components/NewsList.js"],"names":["React","Component","Router","Link","NewsList","articles","refreshing","setState","url","result","fetch","json","e","console","log","getNews","render","itemList","state","map","article","index","push","toString"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;;AAAA,mCAEpC;AACJI,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,UAAU,EAAE;AAFR,KAFoC;;AAAA,qCAOlC,YAAY;AAClB,WAAKC,QAAL,CAAc;AAAED,QAAAA,UAAU,EAAE;AAAd,OAAd,EADkB,CAElB;;AACA,YAAME,GAAG,GAAG,kIAAZ;;AACA,UAAI;AACA,cAAMC,MAAM,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA1B;AACA,cAAMG,IAAI,GAAG,MAAMF,MAAM,CAACE,IAAP,EAAnB,CAFA,CAGA;;AACA,aAAKJ,QAAL,CAAc;AACVF,UAAAA,QAAQ,EAAEM,IAAI,CAACN,QADL;AAEVC,UAAAA,UAAU,EAAE;AAFF,SAAd;AAIH,OARD,CAQE,OAAOM,CAAP,EAAU;AACR,aAAKL,QAAL,CAAc;AAAED,UAAAA,UAAU,EAAE;AAAd,SAAd;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,KAvB2C;;AAAA,+CAyBxB,MAAM;AACtB,WAAKG,OAAL;AACH,KA3B2C;AAAA;;AA6B5CC,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,EAAjB;AACA,SAAKC,KAAL,CAAWb,QAAX,CAAoBc,GAApB,CAAwB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACxCJ,MAAAA,QAAQ,CAACK,IAAT,CACA;AAAI,QAAA,GAAG,EAAED,KAAK,CAACE,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,EAAE,EAAG,MAAKF,KAAM,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,OAAO,CAAC,OAAD,CAAX,CADJ,CADJ,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAK,QAAA,GAAG,EAAEA,OAAO,CAAC,YAAD,CAAjB;AAAiC,QAAA,KAAK,EAAC,KAAvC;AAA6C,QAAA,MAAM,EAAC,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,OAAO,CAAC,aAAD,CAAZ,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,OAAO,CAAC,SAAD,CAAZ,CAHJ,CAJA,CADA;AAWH,KAZD;AAcAP,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWb,QAAvB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKY,QADL,CADA,CADJ;AAOH;;AArD2C","sourcesContent":["import React, {Component} from 'react';\nimport Router from 'next/router';\nimport Link from 'next/link';\n\nexport default class NewsList extends Component {\n\n    state = {\n        articles: [],\n        refreshing: false,\n    }\n\n    getNews = async () => {\n        this.setState({ refreshing: true });\n        // fill your API key!\n        const url = \"https://newsapi.org/v2/everything?q=mufg&from=2019-12-25&to=2020-01-24&sortBy=popularity&apiKey=30d451b495234aae8b35d83d68082817\";\n        try {\n            const result = await fetch(url);\n            const json = await result.json();\n            // console.log(json);\n            this.setState({\n                articles: json.articles,\n                refreshing: false\n            });\n        } catch (e) {\n            this.setState({ refreshing: false });\n            console.log(e);\n        }\n    }\n\n    componentDidMount = () => { \n        this.getNews();\n    }\n\n    render() {\n        const itemList = [];\n        this.state.articles.map((article, index) => {\n            itemList.push(\n            <li key={index.toString}>\n                <Link href=\"/p/[id]\" as={`/p/${index}`}>\n                    <a>{article['title']}</a>\n                 </Link>\n            <ul>\n                <li><img src={article['urlToImage']} width=\"100\" height=\"100\" /></li>\n                <li>{article['description']}</li>\n                <li>{article['content']}</li>\n            </ul>\n            </li>);\n        })\n        \n        console.log(this.state.articles);\n        return (\n            <div>\n            <ul>\n                {itemList}\n            </ul>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}