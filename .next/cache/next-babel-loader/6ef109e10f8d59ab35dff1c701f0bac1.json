{"ast":null,"code":"var _jsxFileName = \"/Users/thesugar/news-sharing/components/NewsList.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport Link from 'next/link';\n\nclass NewsList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      articles: [],\n      refreshing: false\n    });\n\n    _defineProperty(this, \"getNews\", async () => {\n      this.setState({\n        refreshing: true\n      }); // fill your API key!\n\n      const url = \"https://newsapi.org/v2/everything?q=mufg&from=2019-12-25&to=2020-01-24&sortBy=popularity&apiKey=30d451b495234aae8b35d83d68082817\";\n\n      try {\n        const result = await fetch(url);\n        const json = await result.json(); // console.log(json);\n\n        this.props.dispatch({\n          type: 'UPDATE_USER',\n          value: {\n            articles: json.articles,\n            refleshing: false\n          }\n        });\n        /*\n        this.setState({\n            articles: json.articles,\n            refreshing: false\n        });\n        */\n      } catch (e) {\n        /*\n        this.setState({ refreshing: false });\n        */\n        console.log(e);\n      }\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.getNews();\n    });\n  }\n\n  render() {\n    const itemList = [];\n    const items = [];\n    this.props.articles.map((article, index) => {\n      items.push(article);\n      itemList.push(__jsx(\"li\", {\n        key: index.toString,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/p/[id]\",\n        as: `/p/${index}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, article['title'])), __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: article['urlToImage'],\n        width: \"100\",\n        height: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, article['description']), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, article['content']))));\n    });\n    this.props.dispatch({\n      type: 'UPDATE_USER',\n      value: {\n        itemArray: items\n      }\n    });\n    console.log(this.props.articles);\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, itemList));\n  }\n\n}\n\nNewsList = connect(state => state)(NewsList);\nexport default NewsList;","map":{"version":3,"sources":["/Users/thesugar/news-sharing/components/NewsList.js"],"names":["React","Component","connect","Router","Link","NewsList","constructor","props","articles","refreshing","setState","url","result","fetch","json","dispatch","type","value","refleshing","e","console","log","getNews","render","itemList","items","map","article","index","push","toString","itemArray","state"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Router from 'next/router';\nimport Link from 'next/link';\n\nclass NewsList extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    state = {\n        articles: [],\n        refreshing: false,\n    }\n\n    getNews = async () => {\n        this.setState({ refreshing: true });\n        // fill your API key!\n        const url = \"https://newsapi.org/v2/everything?q=mufg&from=2019-12-25&to=2020-01-24&sortBy=popularity&apiKey=30d451b495234aae8b35d83d68082817\";\n        try {\n            const result = await fetch(url);\n            const json = await result.json();\n            // console.log(json);\n\n            this.props.dispatch({\n                type: 'UPDATE_USER',\n                value: {\n                    articles : json.articles,\n                    refleshing : false\n                    }\n            });\n\n            /*\n            this.setState({\n                articles: json.articles,\n                refreshing: false\n            });\n            */\n        } catch (e) {\n            /*\n            this.setState({ refreshing: false });\n            */\n            console.log(e);\n        }\n    }\n\n    componentDidMount = () => { \n        this.getNews();\n    }\n\n    render() {\n        const itemList = [];\n        const items = []\n        this.props.articles.map((article, index) => {\n\n            items.push(article);\n\n            itemList.push(\n            <li key={index.toString}>\n                <Link href=\"/p/[id]\" as={`/p/${index}`}>\n                    <a>{article['title']}</a>\n                 </Link>\n            <ul>\n                <li><img src={article['urlToImage']} width=\"100\" height=\"100\" /></li>\n                <li>{article['description']}</li>\n                <li>{article['content']}</li>\n            </ul>\n            </li>);\n        })\n\n        this.props.dispatch({\n            type: 'UPDATE_USER',\n            value: {\n                itemArray : items\n                }\n        });\n\n        console.log(this.props.articles);\n        return (\n            <div>\n            <ul>\n                {itemList}\n            </ul>\n            </div>\n        );\n    }\n}\n\nNewsList = connect((state) => state)(NewsList);\nexport default NewsList;"]},"metadata":{},"sourceType":"module"}