{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport NewsCard from '../components/NewsCard';\nimport Account from '../components/Account';\nimport firebase from \"firebase\";\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport { Typography } from '@material-ui/core';\n\nclass NewsList extends Component {\n  constructor(props) {\n    console.log('NewsListのconstructor');\n    super(props);\n\n    _defineProperty(this, \"getNews\", async () => {\n      // fill your API key!\n      let url;\n      url = this.state.getHeadline ? \"https://newsapi.org/v2/top-headlines?country=\" + this.state.country + \"&apiKey=30d451b495234aae8b35d83d68082817&pageSize=\" + this.state.pageSize + \"&sortBy=\" + this.state.sortBy : this.state.category ? // category 指定があるとき（Chipを選択したとき）\n      \"https://newsapi.org/v2/top-headlines?country=\" + this.state.country + \"&apiKey=30d451b495234aae8b35d83d68082817&pageSize=\" + this.state.pageSize + \"&sortBy=\" + this.state.sortBy + \"&category=\" + this.state.category : // query指定あるとき（検索時）（country指定はできない）\n      \"https://newsapi.org/v2/everything?q=\" + this.state.query + \"&apiKey=30d451b495234aae8b35d83d68082817&pageSize=\" + this.state.pageSize + \"&sortBy=\" + this.state.sortBy;\n      console.log('inside getNews');\n      console.log(url);\n      const result = await fetch(url);\n      const json = await result.json();\n      let itemList = [];\n      json.articles.map((article, index) => {\n        itemList.push(__jsx(Grid, {\n          item: true,\n          xs: 4\n        }, __jsx(NewsCard, {\n          title: article['title'],\n          image: article['urlToImage'],\n          description: article['description'],\n          index: index\n        })));\n      });\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: this.props.login,\n          articles: json.articles,\n          userid: this.props.userid,\n          itemList: itemList\n        }\n      });\n      this.setState({\n        fetch: false\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", event => {\n      event.preventDefault();\n      this.setState({\n        query: this.state.value,\n        value: '',\n        getHeadline: false,\n        category: false,\n        fetch: true\n      });\n    });\n\n    this.logined = this.logined.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      getHeadline: true,\n      category: false,\n      country: \"jp\",\n      sortBy: \"popularity\",\n      pageSize: 100,\n      fetch: true,\n      query: \"\"\n    };\n  } // get data from Firebase\n\n\n  logined() {\n    console.log('loginしました'); //this.getFireData();\n  }\n\n  logouted() {\n    console.log('logoutしました');\n  }\n  /*\n          <li key={index.toString}>\n              <Link href=\"/p/[id]\" as={`/p/${index}`}>\n              {article['title']}\n              </Link>\n          <ul>\n              <li key=\"0\"><img src={article['urlToImage']} width=\"100\" height=\"100\" /></li>\n              <li key=\"1\">{article['description']}</li>\n              <li key=\"2\">{article['content']}</li>\n          </ul>\n          </li>);\n  */\n\n\n  render() {\n    console.log('NewsListのrender()');\n    console.log('今のthis.propsは');\n    console.log(this.props);\n    this.state.fetch && this.getNews();\n    let category;\n    let getHeadline;\n    return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 5\n    }, __jsx(Grid, {\n      item: true\n    }, __jsx(Chip, {\n      clickable: true,\n      color: this.state.getHeadline ? \"primary\" : \"inherit\",\n      label: \"Headline\",\n      onClick: () => this.setState({\n        getHeadline: true,\n        fetch: true,\n        query: '',\n        category: false\n      })\n    })), __jsx(Grid, {\n      item: true\n    }, __jsx(Chip, {\n      clickable: true,\n      color: this.state.category === \"technology\" ? \"primary\" : \"inherit\",\n      label: \"Technology\",\n      onClick: () => this.setState({\n        category: 'technology',\n        getHeadline: false,\n        fetch: true,\n        query: ''\n      })\n    })), __jsx(Grid, {\n      item: true\n    }, __jsx(Chip, {\n      clickable: true,\n      color: this.state.category === \"business\" ? \"primary\" : \"inherit\",\n      label: \"Business\",\n      onClick: () => this.setState({\n        category: 'business',\n        getHeadline: false,\n        fetch: true,\n        query: ''\n      })\n    })), __jsx(Grid, {\n      item: true\n    }, __jsx(Chip, {\n      clickable: true,\n      color: this.state.category === \"entertainment\" ? \"primary\" : \"inherit\",\n      label: \"Entertainment\",\n      onClick: () => this.setState({\n        category: 'entertainment',\n        getHeadline: false,\n        fetch: true,\n        query: ''\n      })\n    })), __jsx(Grid, {\n      item: true\n    }, __jsx(Chip, {\n      clickable: true,\n      color: this.state.category === \"sports\" ? \"primary\" : \"inherit\",\n      label: \"Sports\",\n      onClick: () => this.setState({\n        category: 'sports',\n        getHeadline: false,\n        fetch: true,\n        query: ''\n      })\n    })), __jsx(Grid, {\n      item: true\n    }, __jsx(Chip, {\n      clickable: true,\n      color: this.state.category === \"science\" ? \"primary\" : \"inherit\",\n      label: \"Science\",\n      onClick: () => this.setState({\n        category: 'science',\n        getHeadline: false,\n        fetch: true,\n        query: ''\n      })\n    })), __jsx(Grid, {\n      item: true\n    }, __jsx(Chip, {\n      clickable: true,\n      color: this.state.query === \"三菱UFJ\" ? \"primary\" : \"inherit\",\n      label: \"MUFG\",\n      onClick: () => this.setState({\n        query: '三菱UFJ',\n        getHeadline: false,\n        category: false,\n        fetch: true\n      })\n    })), __jsx(Grid, {\n      item: true\n    }, __jsx(\"div\", null, __jsx(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 2\n    }, __jsx(Grid, {\n      item: true\n    }, __jsx(SearchIcon, null)), __jsx(Grid, null, __jsx(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: this.handleSubmit\n    }, __jsx(TextField, {\n      id: \"filled-basic\",\n      label: \"Search\",\n      variant: \"filled\",\n      size: \"small\",\n      onChange: event => this.setState({\n        value: event.target.value\n      })\n    })))))))), __jsx(\"div\", null, __jsx(Typography, {\n      variant: \"body2\",\n      color: \"primary\",\n      gutterBottom: true\n    }, __jsx(\"br\", null), this.props.itemList === null || this.props.itemList === undefined || this.props.itemList.length === 0 ? this.state.query + \"の検索結果はありませんでした\" : this.state.query && this.state.query !== '三菱UFJ' ? this.state.query + \"の検索結果を表示しています\" : null), __jsx(Grid, {\n      container: true,\n      spacing: 6\n    }, this.props.itemList)));\n  }\n\n}\n\nNewsList = connect(state => state)(NewsList);\nexport default NewsList;","map":null,"metadata":{},"sourceType":"module"}