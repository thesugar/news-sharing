{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport NewsCard from '../components/NewsCard';\nimport Account from '../components/Account';\nimport firebase from \"firebase\";\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport { Typography } from '@material-ui/core';\n\nvar NewsList = /*#__PURE__*/function (_Component) {\n  _inherits(NewsList, _Component);\n\n  function NewsList(props) {\n    var _this;\n\n    _classCallCheck(this, NewsList);\n\n    console.log('NewsListのconstructor');\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewsList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getNews\", function _callee() {\n      var url, result, json, itemList;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // fill your API key!\n              url = _this.state.getHeadline ? \"https://newsapi.org/v2/top-headlines?country=\" + _this.state.country + \"&apiKey=30d451b495234aae8b35d83d68082817&pageSize=\" + _this.state.pageSize + \"&sortBy=\" + _this.state.sortBy : _this.state.category ? // category 指定があるとき（Chipを選択したとき）\n              \"https://newsapi.org/v2/top-headlines?country=\" + _this.state.country + \"&apiKey=30d451b495234aae8b35d83d68082817&pageSize=\" + _this.state.pageSize + \"&sortBy=\" + _this.state.sortBy + \"&category=\" + _this.state.category : // query指定あるとき（検索時）（country指定はできない）\n              \"https://newsapi.org/v2/everything?q=\" + _this.state.query + \"&apiKey=30d451b495234aae8b35d83d68082817&pageSize=\" + _this.state.pageSize + \"&sortBy=\" + _this.state.sortBy;\n              console.log('inside getNews');\n              console.log(url);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch(url));\n\n            case 5:\n              result = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(result.json());\n\n            case 8:\n              json = _context.sent;\n              itemList = [];\n              json.articles.map(function (article, index) {\n                itemList.push(__jsx(Grid, {\n                  item: true,\n                  xs: 4\n                }, __jsx(NewsCard, {\n                  title: article['title'],\n                  image: article['urlToImage'],\n                  description: article['description'],\n                  index: index\n                })));\n              });\n\n              _this.props.dispatch({\n                type: 'UPDATE_USER',\n                value: {\n                  login: _this.props.login,\n                  articles: json.articles,\n                  userid: _this.props.userid,\n                  itemList: itemList\n                }\n              });\n\n              _this.setState({\n                fetch: false\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        query: _this.state.value,\n        value: '',\n        getHeadline: false,\n        category: false,\n        fetch: true\n      });\n    });\n\n    _this.logined = _this.logined.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.state = {\n      getHeadline: true,\n      category: false,\n      country: \"jp\",\n      sortBy: \"popularity\",\n      pageSize: 100,\n      fetch: true,\n      query: \"\"\n    };\n    return _this;\n  } // get data from Firebase\n\n\n  _createClass(NewsList, [{\n    key: \"logined\",\n    value: function logined() {\n      console.log('loginしました'); //this.getFireData();\n    }\n  }, {\n    key: \"logouted\",\n    value: function logouted() {\n      console.log('logoutしました');\n    }\n    /*\n            <li key={index.toString}>\n                <Link href=\"/p/[id]\" as={`/p/${index}`}>\n                {article['title']}\n                </Link>\n            <ul>\n                <li key=\"0\"><img src={article['urlToImage']} width=\"100\" height=\"100\" /></li>\n                <li key=\"1\">{article['description']}</li>\n                <li key=\"2\">{article['content']}</li>\n            </ul>\n            </li>);\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('NewsListのrender()');\n      console.log('今のthis.propsは');\n      console.log(this.props);\n      this.state.fetch && this.getNews();\n      var category;\n      var getHeadline;\n      return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        spacing: 5\n      }, __jsx(Grid, {\n        item: true\n      }, __jsx(Chip, {\n        clickable: true,\n        color: this.state.getHeadline ? \"primary\" : \"inherit\",\n        label: \"Headline\",\n        onClick: function onClick() {\n          return _this2.setState({\n            getHeadline: true,\n            fetch: true,\n            query: '',\n            category: false\n          });\n        }\n      })), __jsx(Grid, {\n        item: true\n      }, __jsx(Chip, {\n        clickable: true,\n        color: this.state.category === \"technology\" ? \"primary\" : \"inherit\",\n        label: \"Technology\",\n        onClick: function onClick() {\n          return _this2.setState({\n            category: 'technology',\n            getHeadline: false,\n            fetch: true,\n            query: ''\n          });\n        }\n      })), __jsx(Grid, {\n        item: true\n      }, __jsx(Chip, {\n        clickable: true,\n        color: this.state.category === \"business\" ? \"primary\" : \"inherit\",\n        label: \"Business\",\n        onClick: function onClick() {\n          return _this2.setState({\n            category: 'business',\n            getHeadline: false,\n            fetch: true,\n            query: ''\n          });\n        }\n      })), __jsx(Grid, {\n        item: true\n      }, __jsx(Chip, {\n        clickable: true,\n        color: this.state.category === \"entertainment\" ? \"primary\" : \"inherit\",\n        label: \"Entertainment\",\n        onClick: function onClick() {\n          return _this2.setState({\n            category: 'entertainment',\n            getHeadline: false,\n            fetch: true,\n            query: ''\n          });\n        }\n      })), __jsx(Grid, {\n        item: true\n      }, __jsx(Chip, {\n        clickable: true,\n        color: this.state.category === \"sports\" ? \"primary\" : \"inherit\",\n        label: \"Sports\",\n        onClick: function onClick() {\n          return _this2.setState({\n            category: 'sports',\n            getHeadline: false,\n            fetch: true,\n            query: ''\n          });\n        }\n      })), __jsx(Grid, {\n        item: true\n      }, __jsx(Chip, {\n        clickable: true,\n        color: this.state.category === \"science\" ? \"primary\" : \"inherit\",\n        label: \"Science\",\n        onClick: function onClick() {\n          return _this2.setState({\n            category: 'science',\n            getHeadline: false,\n            fetch: true,\n            query: ''\n          });\n        }\n      })), __jsx(Grid, {\n        item: true\n      }, __jsx(Chip, {\n        clickable: true,\n        color: this.state.query === \"三菱UFJ\" ? \"primary\" : \"inherit\",\n        label: \"MUFG\",\n        onClick: function onClick() {\n          return _this2.setState({\n            query: '三菱UFJ',\n            getHeadline: false,\n            category: false,\n            fetch: true\n          });\n        }\n      })), __jsx(Grid, {\n        item: true\n      }, __jsx(\"div\", null, __jsx(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        spacing: 2\n      }, __jsx(Grid, {\n        item: true\n      }, __jsx(SearchIcon, null)), __jsx(Grid, null, __jsx(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: this.handleSubmit\n      }, __jsx(TextField, {\n        id: \"filled-basic\",\n        label: \"Search\",\n        variant: \"filled\",\n        size: \"small\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            value: event.target.value\n          });\n        }\n      })))))))), __jsx(\"div\", null, __jsx(Typography, {\n        variant: \"body2\",\n        color: \"primary\",\n        gutterBottom: true\n      }, __jsx(\"br\", null), this.props.itemList === null || this.props.itemList === undefined || this.props.itemList.length === 0 ? this.state.query + \"の検索結果はありませんでした\" : this.state.query && this.state.query !== '三菱UFJ' ? this.state.query + \"の検索結果を表示しています\" : null), __jsx(Grid, {\n        container: true,\n        spacing: 6\n      }, this.props.itemList)));\n    }\n  }]);\n\n  return NewsList;\n}(Component);\n\nNewsList = connect(function (state) {\n  return state;\n})(NewsList);\nexport default NewsList;","map":null,"metadata":{},"sourceType":"module"}