{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { emphasize } from '@material-ui/core';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA5tM4PcANnpIJk-vYnYnL-q26QBhZR4zk\",\n  authDomain: \"polished-leaf-256709.firebaseapp.com\",\n  databaseURL: \"https://polished-leaf-256709.firebaseio.com\",\n  projectId: \"polished-leaf-256709\",\n  storageBucket: \"polished-leaf-256709.appspot.com\",\n  messagingSenderId: \"766279430691\",\n  appId: \"1:766279430691:web:153ad2000da94cc7617796\",\n  measurementId: \"G-6M2NQ68H20\"\n}; // Initialize Firebase\n\nvar fireapp;\n\ntry {\n  fireapp = firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp; // reducer\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // dummy\n    case 'UPDATE_USER':\n      return action.value;\n    // default\n\n    default:\n      return state;\n  }\n}\n\nvar initial = {\n  login: false,\n  articles: [],\n  userid: 'annonymous',\n  email: '',\n  itemList: []\n};\nvar persistConfig = {\n  key: 'primary',\n  storage: storage,\n  whitelist: ['login', 'articles', 'userid', 'email'] // place to select which state you want to persist\n\n};\nvar persistedReducer = persistReducer(persistConfig, reducer); // initStore function\n\nfunction initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(persistedReducer, state, composeWithDevTools(applyMiddleware()));\n}\n\nexport { initStore };","map":null,"metadata":{},"sourceType":"module"}